{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Auth from \"./Auth\";\n// import Dashboard from \"./Dashboard\";\n// import Exam from \"./Exam\";\n// import Results from \"./Results\";\n\n// function App() {\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\n//   const [page, setPage] = useState(\"login\");\n\n//   useEffect(() => {\n//     const handleHashChange = () => {\n//       const hash = window.location.hash.replace(\"#/\", \"\");\n//       if (hash) setPage(hash);\n//       else {\n//         // redirect to dashboard if token exists\n//         setPage(token ? \"dashboard\" : \"login\");\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\n//       }\n//     };\n\n//     window.addEventListener(\"hashchange\", handleHashChange);\n//     handleHashChange(); // run on page load\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\n//   }, [token]);\n\n//   const handleAuth = (newToken, newUserId) => {\n//     localStorage.setItem(\"token\", newToken);\n//     localStorage.setItem(\"userId\", newUserId);\n//     setToken(newToken);\n//     setUserId(newUserId);\n//     window.location.hash = \"#/dashboard\"; // redirect after login\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"userId\");\n//     setToken(\"\");\n//     setUserId(\"\");\n//     window.location.hash = \"#/login\";\n//   };\n\n//   if (!token) return <Auth onAuth={handleAuth} />;\n\n//   switch (page) {\n//     case \"dashboard\":\n//       return <Dashboard onLogout={handleLogout} />;\n//     case \"exam\":\n//       return <Exam token={token} />;\n//     case \"results\":\n//       return <Results token={token} />;\n//     default:\n//       window.location.hash = \"#/dashboard\";\n//       return null;\n//   }\n// }\n\n// export default App;  \n\n// import React, { useState, useEffect } from \"react\";\n// import Auth from \"./Auth\";\n// import Dashboard from \"./Dashboard\";\n// import Exam from \"./Exam\";\n// import Results from \"./Results\";\n\n// function App() {\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\n//   const [page, setPage] = useState(\"login\");\n\n//   useEffect(() => {\n//     const handleHashChange = () => {\n//       const hash = window.location.hash.replace(\"#/\", \"\");\n\n//       // **Check if exam is in progress**\n//       const examQuestions = localStorage.getItem(\"exam_questions\");\n//       const examAnswers = localStorage.getItem(\"exam_answers\");\n//       const examTime = localStorage.getItem(\"exam_timeLeft\");\n\n//       if (examQuestions && examAnswers && examTime) {\n//         // Resume exam on refresh\n//         setPage(\"exam\");\n//         window.location.hash = \"#/exam\";\n//       } else if (hash) {\n//         setPage(hash);\n//       } else {\n//         // Default redirect\n//         setPage(token ? \"dashboard\" : \"login\");\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\n//       }\n//     };\n\n//     window.addEventListener(\"hashchange\", handleHashChange);\n//     handleHashChange(); // run on page load\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\n//   }, [token]);\n\n//   const handleAuth = (newToken, newUserId) => {\n//     localStorage.setItem(\"token\", newToken);\n//     localStorage.setItem(\"userId\", newUserId);\n//     setToken(newToken);\n//     setUserId(newUserId);\n//     window.location.hash = \"#/dashboard\"; // redirect after login\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"userId\");\n//     setToken(\"\");\n//     setUserId(\"\");\n//     window.location.hash = \"#/login\";\n//   };\n\n//   if (!token) return <Auth onAuth={handleAuth} />;\n\n//   switch (page) {\n//     case \"dashboard\":\n//       return <Dashboard onLogout={handleLogout} />;\n//     case \"exam\":\n//       return <Exam token={token} />;\n//     case \"results\":\n//       return <Results token={token} />;\n//     default:\n//       window.location.hash = \"#/dashboard\";\n//       return null;\n//   }\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from \"react\";\n// import Auth from \"./Auth\";\n// import Dashboard from \"./Dashboard\";\n// import Exam from \"./Exam\";\n// import Results from \"./Results\";\n\n// function App() {\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\n//   const [page, setPage] = useState(\"login\");\n\n//   useEffect(() => {\n//     const handleHashChange = () => {\n//       const hash = window.location.hash.replace(\"#/\", \"\");\n//       if (hash) setPage(hash);\n//       else {\n//         setPage(token ? \"dashboard\" : \"login\");\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\n//       }\n//     };\n\n//     window.addEventListener(\"hashchange\", handleHashChange);\n//     handleHashChange();\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\n//   }, [token]);\n\n//   const handleAuth = (newToken, newUserId) => {\n//     setToken(newToken);\n//     setUserId(newUserId);\n//     window.location.hash = \"#/dashboard\";\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.clear();\n//     setToken(\"\");\n//     setUserId(\"\");\n//     window.location.hash = \"#/login\";\n//   };\n\n//   if (!token) return <Auth onAuth={handleAuth} />;\n\n//   switch (page) {\n//     case \"dashboard\":\n//       return <Dashboard onLogout={handleLogout} />;\n//     case \"exam\":\n//       return <Exam token={token} />;\n//     case \"results\":\n//       return <Results token={token} />;\n//     default:\n//       window.location.hash = \"#/dashboard\";\n//       return null;\n//   }\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from \"react\";\n// import Auth from \"./Auth\";\n// import Dashboard from \"./Dashboard\";\n// import Exam from \"./Exam\";\n// import Results from \"./Results\";\n\n// function App() {\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\n//   const [page, setPage] = useState(\"login\");\n\n//   useEffect(() => {\n//     const handleHashChange = () => {\n//       let hash = window.location.hash.replace(\"#/\", \"\");\n\n//       // Restore exam in-progress on refresh\n//       const savedQuestions = localStorage.getItem(\"exam_questions\");\n//       const savedAnswers = localStorage.getItem(\"exam_answers\");\n//       const savedTime = localStorage.getItem(\"exam_timeLeft\");\n\n//       if (savedQuestions && savedAnswers && savedTime && hash !== \"exam\" && hash !== \"results\") {\n//         hash = \"exam\";\n//         window.location.hash = \"#/exam\";\n//       }\n\n//       // Restore results view on refresh\n//       const viewingResults = localStorage.getItem(\"viewing_results\");\n//       if (viewingResults && hash !== \"results\") {\n//         hash = \"results\";\n//         window.location.hash = \"#/results\";\n//       }\n\n//       // Default routing\n//       if (hash) {\n//         setPage(hash);\n//       } else {\n//         setPage(token ? \"dashboard\" : \"login\");\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\n//       }\n//     };\n\n//     window.addEventListener(\"hashchange\", handleHashChange);\n//     handleHashChange(); // run on page load\n\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\n//   }, [token]);\n\n//   const handleAuth = (newToken, newUserId) => {\n//     localStorage.setItem(\"token\", newToken);\n//     localStorage.setItem(\"userId\", newUserId);\n//     setToken(newToken);\n//     setUserId(newUserId);\n//     window.location.hash = \"#/dashboard\";\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.clear();\n//     setToken(\"\");\n//     setUserId(\"\");\n//     window.location.hash = \"#/login\";\n//   };\n\n//   // If no token, show login/register page\n//   if (!token) return <Auth onAuth={handleAuth} />;\n\n//   // Render the right page\n//   switch (page) {\n//     case \"dashboard\":\n//       return <Dashboard onLogout={handleLogout} />;\n//     case \"exam\":\n//       return <Exam token={token} />;\n//     case \"results\":\n//       return <Results token={token} />;\n//     default:\n//       window.location.hash = \"#/dashboard\";\n//       return null;\n//   }\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/Sridh/Desktop/new-exam-builder-ace-main/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Auth from \"./Auth\";\r\n// import Dashboard from \"./Dashboard\";\r\n// import Exam from \"./Exam\";\r\n// import Results from \"./Results\";\r\n\r\n// function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\r\n//   const [page, setPage] = useState(\"login\");\r\n\r\n//   useEffect(() => {\r\n//     const handleHashChange = () => {\r\n//       const hash = window.location.hash.replace(\"#/\", \"\");\r\n//       if (hash) setPage(hash);\r\n//       else {\r\n//         // redirect to dashboard if token exists\r\n//         setPage(token ? \"dashboard\" : \"login\");\r\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener(\"hashchange\", handleHashChange);\r\n//     handleHashChange(); // run on page load\r\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\r\n//   }, [token]);\r\n\r\n//   const handleAuth = (newToken, newUserId) => {\r\n//     localStorage.setItem(\"token\", newToken);\r\n//     localStorage.setItem(\"userId\", newUserId);\r\n//     setToken(newToken);\r\n//     setUserId(newUserId);\r\n//     window.location.hash = \"#/dashboard\"; // redirect after login\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"userId\");\r\n//     setToken(\"\");\r\n//     setUserId(\"\");\r\n//     window.location.hash = \"#/login\";\r\n//   };\r\n\r\n//   if (!token) return <Auth onAuth={handleAuth} />;\r\n\r\n//   switch (page) {\r\n//     case \"dashboard\":\r\n//       return <Dashboard onLogout={handleLogout} />;\r\n//     case \"exam\":\r\n//       return <Exam token={token} />;\r\n//     case \"results\":\r\n//       return <Results token={token} />;\r\n//     default:\r\n//       window.location.hash = \"#/dashboard\";\r\n//       return null;\r\n//   }\r\n// }\r\n\r\n// export default App;  \r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Auth from \"./Auth\";\r\n// import Dashboard from \"./Dashboard\";\r\n// import Exam from \"./Exam\";\r\n// import Results from \"./Results\";\r\n\r\n// function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\r\n//   const [page, setPage] = useState(\"login\");\r\n\r\n//   useEffect(() => {\r\n//     const handleHashChange = () => {\r\n//       const hash = window.location.hash.replace(\"#/\", \"\");\r\n      \r\n//       // **Check if exam is in progress**\r\n//       const examQuestions = localStorage.getItem(\"exam_questions\");\r\n//       const examAnswers = localStorage.getItem(\"exam_answers\");\r\n//       const examTime = localStorage.getItem(\"exam_timeLeft\");\r\n\r\n//       if (examQuestions && examAnswers && examTime) {\r\n//         // Resume exam on refresh\r\n//         setPage(\"exam\");\r\n//         window.location.hash = \"#/exam\";\r\n//       } else if (hash) {\r\n//         setPage(hash);\r\n//       } else {\r\n//         // Default redirect\r\n//         setPage(token ? \"dashboard\" : \"login\");\r\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener(\"hashchange\", handleHashChange);\r\n//     handleHashChange(); // run on page load\r\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\r\n//   }, [token]);\r\n\r\n//   const handleAuth = (newToken, newUserId) => {\r\n//     localStorage.setItem(\"token\", newToken);\r\n//     localStorage.setItem(\"userId\", newUserId);\r\n//     setToken(newToken);\r\n//     setUserId(newUserId);\r\n//     window.location.hash = \"#/dashboard\"; // redirect after login\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"userId\");\r\n//     setToken(\"\");\r\n//     setUserId(\"\");\r\n//     window.location.hash = \"#/login\";\r\n//   };\r\n\r\n//   if (!token) return <Auth onAuth={handleAuth} />;\r\n\r\n//   switch (page) {\r\n//     case \"dashboard\":\r\n//       return <Dashboard onLogout={handleLogout} />;\r\n//     case \"exam\":\r\n//       return <Exam token={token} />;\r\n//     case \"results\":\r\n//       return <Results token={token} />;\r\n//     default:\r\n//       window.location.hash = \"#/dashboard\";\r\n//       return null;\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Auth from \"./Auth\";\r\n// import Dashboard from \"./Dashboard\";\r\n// import Exam from \"./Exam\";\r\n// import Results from \"./Results\";\r\n\r\n// function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\r\n//   const [page, setPage] = useState(\"login\");\r\n\r\n//   useEffect(() => {\r\n//     const handleHashChange = () => {\r\n//       const hash = window.location.hash.replace(\"#/\", \"\");\r\n//       if (hash) setPage(hash);\r\n//       else {\r\n//         setPage(token ? \"dashboard\" : \"login\");\r\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener(\"hashchange\", handleHashChange);\r\n//     handleHashChange();\r\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\r\n//   }, [token]);\r\n\r\n//   const handleAuth = (newToken, newUserId) => {\r\n//     setToken(newToken);\r\n//     setUserId(newUserId);\r\n//     window.location.hash = \"#/dashboard\";\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.clear();\r\n//     setToken(\"\");\r\n//     setUserId(\"\");\r\n//     window.location.hash = \"#/login\";\r\n//   };\r\n\r\n//   if (!token) return <Auth onAuth={handleAuth} />;\r\n\r\n//   switch (page) {\r\n//     case \"dashboard\":\r\n//       return <Dashboard onLogout={handleLogout} />;\r\n//     case \"exam\":\r\n//       return <Exam token={token} />;\r\n//     case \"results\":\r\n//       return <Results token={token} />;\r\n//     default:\r\n//       window.location.hash = \"#/dashboard\";\r\n//       return null;\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Auth from \"./Auth\";\r\n// import Dashboard from \"./Dashboard\";\r\n// import Exam from \"./Exam\";\r\n// import Results from \"./Results\";\r\n\r\n// function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\r\n//   const [page, setPage] = useState(\"login\");\r\n\r\n//   useEffect(() => {\r\n//     const handleHashChange = () => {\r\n//       let hash = window.location.hash.replace(\"#/\", \"\");\r\n\r\n//       // Restore exam in-progress on refresh\r\n//       const savedQuestions = localStorage.getItem(\"exam_questions\");\r\n//       const savedAnswers = localStorage.getItem(\"exam_answers\");\r\n//       const savedTime = localStorage.getItem(\"exam_timeLeft\");\r\n\r\n//       if (savedQuestions && savedAnswers && savedTime && hash !== \"exam\" && hash !== \"results\") {\r\n//         hash = \"exam\";\r\n//         window.location.hash = \"#/exam\";\r\n//       }\r\n\r\n//       // Restore results view on refresh\r\n//       const viewingResults = localStorage.getItem(\"viewing_results\");\r\n//       if (viewingResults && hash !== \"results\") {\r\n//         hash = \"results\";\r\n//         window.location.hash = \"#/results\";\r\n//       }\r\n\r\n//       // Default routing\r\n//       if (hash) {\r\n//         setPage(hash);\r\n//       } else {\r\n//         setPage(token ? \"dashboard\" : \"login\");\r\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener(\"hashchange\", handleHashChange);\r\n//     handleHashChange(); // run on page load\r\n\r\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\r\n//   }, [token]);\r\n\r\n//   const handleAuth = (newToken, newUserId) => {\r\n//     localStorage.setItem(\"token\", newToken);\r\n//     localStorage.setItem(\"userId\", newUserId);\r\n//     setToken(newToken);\r\n//     setUserId(newUserId);\r\n//     window.location.hash = \"#/dashboard\";\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.clear();\r\n//     setToken(\"\");\r\n//     setUserId(\"\");\r\n//     window.location.hash = \"#/login\";\r\n//   };\r\n\r\n//   // If no token, show login/register page\r\n//   if (!token) return <Auth onAuth={handleAuth} />;\r\n\r\n//   // Render the right page\r\n//   switch (page) {\r\n//     case \"dashboard\":\r\n//       return <Dashboard onLogout={handleLogout} />;\r\n//     case \"exam\":\r\n//       return <Exam token={token} />;\r\n//     case \"results\":\r\n//       return <Results token={token} />;\r\n//     default:\r\n//       window.location.hash = \"#/dashboard\";\r\n//       return null;\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}