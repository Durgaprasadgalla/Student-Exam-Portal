{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sridh\\\\Desktop\\\\new-exam-builder-ace-main\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import Auth from \"./Auth\";\n// import Dashboard from \"./Dashboard\";\n// import Exam from \"./Exam\";\n// import Results from \"./Results\";\n\n// function App() {\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\n//   const [page, setPage] = useState(\"login\");\n\n//   useEffect(() => {\n//     const handleHashChange = () => {\n//       const hash = window.location.hash.replace(\"#/\", \"\");\n//       if (hash) setPage(hash);\n//       else {\n//         // redirect to dashboard if token exists\n//         setPage(token ? \"dashboard\" : \"login\");\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\n//       }\n//     };\n\n//     window.addEventListener(\"hashchange\", handleHashChange);\n//     handleHashChange(); // run on page load\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\n//   }, [token]);\n\n//   const handleAuth = (newToken, newUserId) => {\n//     localStorage.setItem(\"token\", newToken);\n//     localStorage.setItem(\"userId\", newUserId);\n//     setToken(newToken);\n//     setUserId(newUserId);\n//     window.location.hash = \"#/dashboard\"; // redirect after login\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"userId\");\n//     setToken(\"\");\n//     setUserId(\"\");\n//     window.location.hash = \"#/login\";\n//   };\n\n//   if (!token) return <Auth onAuth={handleAuth} />;\n\n//   switch (page) {\n//     case \"dashboard\":\n//       return <Dashboard onLogout={handleLogout} />;\n//     case \"exam\":\n//       return <Exam token={token} />;\n//     case \"results\":\n//       return <Results token={token} />;\n//     default:\n//       window.location.hash = \"#/dashboard\";\n//       return null;\n//   }\n// }\n\n// export default App;  \n\n// import React, { useState, useEffect } from \"react\";\n// import Auth from \"./Auth\";\n// import Dashboard from \"./Dashboard\";\n// import Exam from \"./Exam\";\n// import Results from \"./Results\";\n\n// function App() {\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\n//   const [page, setPage] = useState(\"login\");\n\n//   useEffect(() => {\n//     const handleHashChange = () => {\n//       const hash = window.location.hash.replace(\"#/\", \"\");\n\n//       // **Check if exam is in progress**\n//       const examQuestions = localStorage.getItem(\"exam_questions\");\n//       const examAnswers = localStorage.getItem(\"exam_answers\");\n//       const examTime = localStorage.getItem(\"exam_timeLeft\");\n\n//       if (examQuestions && examAnswers && examTime) {\n//         // Resume exam on refresh\n//         setPage(\"exam\");\n//         window.location.hash = \"#/exam\";\n//       } else if (hash) {\n//         setPage(hash);\n//       } else {\n//         // Default redirect\n//         setPage(token ? \"dashboard\" : \"login\");\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\n//       }\n//     };\n\n//     window.addEventListener(\"hashchange\", handleHashChange);\n//     handleHashChange(); // run on page load\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\n//   }, [token]);\n\n//   const handleAuth = (newToken, newUserId) => {\n//     localStorage.setItem(\"token\", newToken);\n//     localStorage.setItem(\"userId\", newUserId);\n//     setToken(newToken);\n//     setUserId(newUserId);\n//     window.location.hash = \"#/dashboard\"; // redirect after login\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"token\");\n//     localStorage.removeItem(\"userId\");\n//     setToken(\"\");\n//     setUserId(\"\");\n//     window.location.hash = \"#/login\";\n//   };\n\n//   if (!token) return <Auth onAuth={handleAuth} />;\n\n//   switch (page) {\n//     case \"dashboard\":\n//       return <Dashboard onLogout={handleLogout} />;\n//     case \"exam\":\n//       return <Exam token={token} />;\n//     case \"results\":\n//       return <Results token={token} />;\n//     default:\n//       window.location.hash = \"#/dashboard\";\n//       return null;\n//   }\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport Auth from \"./Auth\";\nimport Dashboard from \"./Dashboard\";\nimport Exam from \"./Exam\";\nimport Results from \"./Results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\n  const [page, setPage] = useState(\"login\");\n  const handleSubmit = async () => {\n    if (submitted) return;\n    const payload = questions.map((q, i) => ({\n      questionId: q._id,\n      selectedOption: answers[i]\n    }));\n    try {\n      await submitExam(payload, token);\n      setSubmitted(true);\n\n      // Clear exam storage\n      localStorage.removeItem(\"exam_questions\");\n      localStorage.removeItem(\"exam_answers\");\n      localStorage.removeItem(\"exam_current\");\n      localStorage.removeItem(\"exam_timeLeft\");\n\n      // âœ… Mark that we are now viewing the results\n      localStorage.setItem(\"viewing_results\", \"true\");\n\n      // Load results and go to results page\n      const r = await getResult(token);\n      setResult(r.data);\n      window.location.hash = \"#/results\";\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Error submitting exam\");\n    }\n  };\n  const handleAuth = (newToken, newUserId) => {\n    setToken(newToken);\n    setUserId(newUserId);\n    window.location.hash = \"#/dashboard\";\n  };\n  const handleLogout = () => {\n    localStorage.clear();\n    setToken(\"\");\n    setUserId(\"\");\n    window.location.hash = \"#/login\";\n  };\n  if (!token) return /*#__PURE__*/_jsxDEV(Auth, {\n    onAuth: handleAuth\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 22\n  }, this);\n  switch (page) {\n    case \"dashboard\":\n      return /*#__PURE__*/_jsxDEV(Dashboard, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 14\n      }, this);\n    case \"exam\":\n      return /*#__PURE__*/_jsxDEV(Exam, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 14\n      }, this);\n    case \"results\":\n      return /*#__PURE__*/_jsxDEV(Results, {\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 14\n      }, this);\n    default:\n      window.location.hash = \"#/dashboard\";\n      return null;\n  }\n}\n_s(App, \"2IsZE148rqaK7ngbbboU6+sMB0E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Auth","Dashboard","Exam","Results","jsxDEV","_jsxDEV","App","_s","token","setToken","localStorage","getItem","userId","setUserId","page","setPage","handleSubmit","submitted","payload","questions","map","q","i","questionId","_id","selectedOption","answers","submitExam","setSubmitted","removeItem","setItem","r","getResult","setResult","data","window","location","hash","err","_err$response","_err$response$data","console","error","alert","response","message","handleAuth","newToken","newUserId","handleLogout","clear","onAuth","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/Sridh/Desktop/new-exam-builder-ace-main/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Auth from \"./Auth\";\r\n// import Dashboard from \"./Dashboard\";\r\n// import Exam from \"./Exam\";\r\n// import Results from \"./Results\";\r\n\r\n// function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\r\n//   const [page, setPage] = useState(\"login\");\r\n\r\n//   useEffect(() => {\r\n//     const handleHashChange = () => {\r\n//       const hash = window.location.hash.replace(\"#/\", \"\");\r\n//       if (hash) setPage(hash);\r\n//       else {\r\n//         // redirect to dashboard if token exists\r\n//         setPage(token ? \"dashboard\" : \"login\");\r\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener(\"hashchange\", handleHashChange);\r\n//     handleHashChange(); // run on page load\r\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\r\n//   }, [token]);\r\n\r\n//   const handleAuth = (newToken, newUserId) => {\r\n//     localStorage.setItem(\"token\", newToken);\r\n//     localStorage.setItem(\"userId\", newUserId);\r\n//     setToken(newToken);\r\n//     setUserId(newUserId);\r\n//     window.location.hash = \"#/dashboard\"; // redirect after login\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"userId\");\r\n//     setToken(\"\");\r\n//     setUserId(\"\");\r\n//     window.location.hash = \"#/login\";\r\n//   };\r\n\r\n//   if (!token) return <Auth onAuth={handleAuth} />;\r\n\r\n//   switch (page) {\r\n//     case \"dashboard\":\r\n//       return <Dashboard onLogout={handleLogout} />;\r\n//     case \"exam\":\r\n//       return <Exam token={token} />;\r\n//     case \"results\":\r\n//       return <Results token={token} />;\r\n//     default:\r\n//       window.location.hash = \"#/dashboard\";\r\n//       return null;\r\n//   }\r\n// }\r\n\r\n// export default App;  \r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import Auth from \"./Auth\";\r\n// import Dashboard from \"./Dashboard\";\r\n// import Exam from \"./Exam\";\r\n// import Results from \"./Results\";\r\n\r\n// function App() {\r\n//   const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n//   const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\r\n//   const [page, setPage] = useState(\"login\");\r\n\r\n//   useEffect(() => {\r\n//     const handleHashChange = () => {\r\n//       const hash = window.location.hash.replace(\"#/\", \"\");\r\n      \r\n//       // **Check if exam is in progress**\r\n//       const examQuestions = localStorage.getItem(\"exam_questions\");\r\n//       const examAnswers = localStorage.getItem(\"exam_answers\");\r\n//       const examTime = localStorage.getItem(\"exam_timeLeft\");\r\n\r\n//       if (examQuestions && examAnswers && examTime) {\r\n//         // Resume exam on refresh\r\n//         setPage(\"exam\");\r\n//         window.location.hash = \"#/exam\";\r\n//       } else if (hash) {\r\n//         setPage(hash);\r\n//       } else {\r\n//         // Default redirect\r\n//         setPage(token ? \"dashboard\" : \"login\");\r\n//         window.location.hash = token ? \"#/dashboard\" : \"#/login\";\r\n//       }\r\n//     };\r\n\r\n//     window.addEventListener(\"hashchange\", handleHashChange);\r\n//     handleHashChange(); // run on page load\r\n//     return () => window.removeEventListener(\"hashchange\", handleHashChange);\r\n//   }, [token]);\r\n\r\n//   const handleAuth = (newToken, newUserId) => {\r\n//     localStorage.setItem(\"token\", newToken);\r\n//     localStorage.setItem(\"userId\", newUserId);\r\n//     setToken(newToken);\r\n//     setUserId(newUserId);\r\n//     window.location.hash = \"#/dashboard\"; // redirect after login\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     localStorage.removeItem(\"userId\");\r\n//     setToken(\"\");\r\n//     setUserId(\"\");\r\n//     window.location.hash = \"#/login\";\r\n//   };\r\n\r\n//   if (!token) return <Auth onAuth={handleAuth} />;\r\n\r\n//   switch (page) {\r\n//     case \"dashboard\":\r\n//       return <Dashboard onLogout={handleLogout} />;\r\n//     case \"exam\":\r\n//       return <Exam token={token} />;\r\n//     case \"results\":\r\n//       return <Results token={token} />;\r\n//     default:\r\n//       window.location.hash = \"#/dashboard\";\r\n//       return null;\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Auth from \"./Auth\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Exam from \"./Exam\";\r\nimport Results from \"./Results\";\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n  const [userId, setUserId] = useState(localStorage.getItem(\"userId\") || \"\");\r\n  const [page, setPage] = useState(\"login\");\r\n\r\nconst handleSubmit = async () => {\r\n  if (submitted) return;\r\n  const payload = questions.map((q, i) => ({\r\n    questionId: q._id,\r\n    selectedOption: answers[i],\r\n  }));\r\n\r\n  try {\r\n    await submitExam(payload, token);\r\n    setSubmitted(true);\r\n\r\n    // Clear exam storage\r\n    localStorage.removeItem(\"exam_questions\");\r\n    localStorage.removeItem(\"exam_answers\");\r\n    localStorage.removeItem(\"exam_current\");\r\n    localStorage.removeItem(\"exam_timeLeft\");\r\n\r\n    // âœ… Mark that we are now viewing the results\r\n    localStorage.setItem(\"viewing_results\", \"true\");\r\n\r\n    // Load results and go to results page\r\n    const r = await getResult(token);\r\n    setResult(r.data);\r\n    window.location.hash = \"#/results\";\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.response?.data?.message || \"Error submitting exam\");\r\n  }\r\n};\r\n\r\n  const handleAuth = (newToken, newUserId) => {\r\n    setToken(newToken);\r\n    setUserId(newUserId);\r\n    window.location.hash = \"#/dashboard\";\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    setToken(\"\");\r\n    setUserId(\"\");\r\n    window.location.hash = \"#/login\";\r\n  };\r\n\r\n  if (!token) return <Auth onAuth={handleAuth} />;\r\n\r\n  switch (page) {\r\n    case \"dashboard\":\r\n      return <Dashboard onLogout={handleLogout} />;\r\n    case \"exam\":\r\n      return <Exam token={token} />;\r\n    case \"results\":\r\n      return <Results token={token} />;\r\n    default:\r\n      window.location.hash = \"#/dashboard\";\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}