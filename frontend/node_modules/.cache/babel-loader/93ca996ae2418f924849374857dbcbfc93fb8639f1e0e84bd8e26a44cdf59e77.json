{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sridh\\\\Desktop\\\\new-exam-builder-ace-main\\\\frontend\\\\src\\\\Auth.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { login, register } from \"./api\";\n// import \"./Auth.css\";\n\n// function Auth({ onAuth }) {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [error, setError] = useState(\"\");\n\n//   const validatePassword = (pwd) => {\n//     const errors = [];\n//     if (pwd.length < 8) errors.push(\"At least 8 characters\");\n//     if (!/[A-Z]/.test(pwd)) errors.push(\"At least one uppercase letter\");\n//     if (!/[a-z]/.test(pwd)) errors.push(\"At least one lowercase letter\");\n//     if (!/[0-9]/.test(pwd)) errors.push(\"At least one number\");\n//     if (!/[!@#$%^&*(),.?\\\":{}|<>]/.test(pwd)) errors.push(\"At least one special character\");\n//     return errors;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n\n//     if (!isLogin) {\n//       const pwdErrors = validatePassword(password);\n//       if (pwdErrors.length > 0) {\n//         setError(\"Password must meet requirements: \" + pwdErrors.join(\", \"));\n//         return;\n//       }\n//     }\n\n//     try {\n//       if (isLogin) {\n//         const res = await login(username, password);\n//         const { token, userId } = res.data;\n//         onAuth(token, userId, username);\n//       } else {\n//         await register(username, password);\n//         setError(\"Registration successful! Please login.\");\n//         setIsLogin(true);\n//         setUsername(\"\");\n//         setPassword(\"\");\n//       }\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Error\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container card\">\n//       <h2>{isLogin ? \"Login\" : \"Register\"}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} required />\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\n//         <button type=\"submit\">{isLogin ? \"Login\" : \"Register\"}</button>\n//       </form>\n//       <button onClick={() => { setIsLogin(!isLogin); setError(\"\"); }}>\n//         {isLogin ? \"Need an account? Register\" : \"Have an account? Login\"}\n//       </button>\n//       {error && <div style={{color: \"red\"}}>{error}</div>}\n//     </div>\n//   );\n// }\n\n// export default Auth;\nimport React, { useState } from 'react';\nimport './Auth.css';\nimport { register, login } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Auth({\n  onAuth\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      if (isLogin) {\n        const res = await login(username, password);\n        const {\n          token,\n          userId\n        } = res.data;\n        onAuth(token, userId);\n      } else {\n        await register(username, password);\n        setError('Registration successful! Please login.');\n        setIsLogin(true);\n        setUsername('');\n        setPassword('');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setIsLogin(!isLogin);\n        setError('');\n      },\n      children: isLogin ? 'Need an account? Register' : 'Have an account? Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(Auth, \"qo0UEwUqRI26mZe0LBVWW41X1xo=\");\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","register","login","jsxDEV","_jsxDEV","Auth","onAuth","_s","username","setUsername","password","setPassword","isLogin","setIsLogin","error","setError","handleSubmit","e","preventDefault","res","token","userId","data","err","_err$response","_err$response$data","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Sridh/Desktop/new-exam-builder-ace-main/frontend/src/Auth.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { login, register } from \"./api\";\r\n// import \"./Auth.css\";\r\n\r\n// function Auth({ onAuth }) {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [isLogin, setIsLogin] = useState(true);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const validatePassword = (pwd) => {\r\n//     const errors = [];\r\n//     if (pwd.length < 8) errors.push(\"At least 8 characters\");\r\n//     if (!/[A-Z]/.test(pwd)) errors.push(\"At least one uppercase letter\");\r\n//     if (!/[a-z]/.test(pwd)) errors.push(\"At least one lowercase letter\");\r\n//     if (!/[0-9]/.test(pwd)) errors.push(\"At least one number\");\r\n//     if (!/[!@#$%^&*(),.?\\\":{}|<>]/.test(pwd)) errors.push(\"At least one special character\");\r\n//     return errors;\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n\r\n//     if (!isLogin) {\r\n//       const pwdErrors = validatePassword(password);\r\n//       if (pwdErrors.length > 0) {\r\n//         setError(\"Password must meet requirements: \" + pwdErrors.join(\", \"));\r\n//         return;\r\n//       }\r\n//     }\r\n\r\n//     try {\r\n//       if (isLogin) {\r\n//         const res = await login(username, password);\r\n//         const { token, userId } = res.data;\r\n//         onAuth(token, userId, username);\r\n//       } else {\r\n//         await register(username, password);\r\n//         setError(\"Registration successful! Please login.\");\r\n//         setIsLogin(true);\r\n//         setUsername(\"\");\r\n//         setPassword(\"\");\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || \"Error\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container card\">\r\n//       <h2>{isLogin ? \"Login\" : \"Register\"}</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} required />\r\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n//         <button type=\"submit\">{isLogin ? \"Login\" : \"Register\"}</button>\r\n//       </form>\r\n//       <button onClick={() => { setIsLogin(!isLogin); setError(\"\"); }}>\r\n//         {isLogin ? \"Need an account? Register\" : \"Have an account? Login\"}\r\n//       </button>\r\n//       {error && <div style={{color: \"red\"}}>{error}</div>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Auth;\r\nimport React, { useState } from 'react';\r\nimport './Auth.css';\r\nimport { register, login } from './api';\r\n\r\nfunction Auth({ onAuth }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    try {\r\n      if (isLogin) {\r\n        const res = await login(username, password);\r\n        const { token, userId } = res.data;\r\n        onAuth(token, userId);\r\n      } else {\r\n        await register(username, password);\r\n        setError('Registration successful! Please login.');\r\n        setIsLogin(true);\r\n        setUsername('');\r\n        setPassword('');\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container card\">\r\n      <h2>{isLogin ? 'Login' : 'Register'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} required />\r\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n      </form>\r\n      <button onClick={() => { setIsLogin(!isLogin); setError(''); }}>\r\n        {isLogin ? 'Need an account? Register' : 'Have an account? Login'}\r\n      </button>\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}