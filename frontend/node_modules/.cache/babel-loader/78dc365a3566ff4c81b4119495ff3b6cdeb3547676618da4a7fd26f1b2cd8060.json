{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sridh\\\\Desktop\\\\new-exam-builder-ace-main\\\\frontend\\\\src\\\\Exam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Exam.css\";\nimport { getQuestions, submitExam, getResult } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Exam({\n  token\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [current, setCurrent] = useState(0);\n  const [submitted, setSubmitted] = useState(false);\n  const [result, setResult] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // seconds\n\n  // Load stored exam state on mount\n  useEffect(() => {\n    const storedQuestions = localStorage.getItem(\"exam_questions\");\n    const storedAnswers = localStorage.getItem(\"exam_answers\");\n    const storedCurrent = localStorage.getItem(\"exam_current\");\n    const storedTimeLeft = localStorage.getItem(\"exam_timeLeft\");\n    getResult(token).then(r => {\n      if (r.data && r.data.review) {\n        setSubmitted(true);\n        setResult(r.data);\n      } else {\n        if (storedQuestions && storedAnswers && storedCurrent && storedTimeLeft) {\n          setQuestions(JSON.parse(storedQuestions));\n          setAnswers(JSON.parse(storedAnswers));\n          setCurrent(parseInt(storedCurrent, 10));\n          setTimeLeft(parseInt(storedTimeLeft, 10));\n        } else {\n          getQuestions(token).then(res => {\n            setQuestions(res.data);\n            setAnswers(Array(res.data.length).fill(null));\n            localStorage.setItem(\"exam_questions\", JSON.stringify(res.data));\n          });\n        }\n      }\n    }).catch(() => {\n      if (storedQuestions && storedAnswers && storedCurrent && storedTimeLeft) {\n        setQuestions(JSON.parse(storedQuestions));\n        setAnswers(JSON.parse(storedAnswers));\n        setCurrent(parseInt(storedCurrent, 10));\n        setTimeLeft(parseInt(storedTimeLeft, 10));\n      } else {\n        getQuestions(token).then(res => {\n          setQuestions(res.data);\n          setAnswers(Array(res.data.length).fill(null));\n          localStorage.setItem(\"exam_questions\", JSON.stringify(res.data));\n        });\n      }\n    });\n  }, [token]);\n\n  // Save state to localStorage whenever it changes\n  useEffect(() => {\n    if (questions.length) {\n      localStorage.setItem(\"exam_questions\", JSON.stringify(questions));\n      localStorage.setItem(\"exam_answers\", JSON.stringify(answers));\n      localStorage.setItem(\"exam_current\", current);\n      localStorage.setItem(\"exam_timeLeft\", timeLeft);\n    }\n  }, [questions, answers, current, timeLeft]);\n\n  // Timer effect\n  useEffect(() => {\n    if (!questions.length || submitted) return;\n    if (timeLeft <= 0) {\n      handleSubmit();\n      return;\n    }\n    const timer = setTimeout(() => setTimeLeft(t => t - 1), 1000);\n    return () => clearTimeout(timer);\n  }, [questions.length, submitted, timeLeft]);\n  const handleOption = idx => {\n    const newAnswers = [...answers];\n    newAnswers[current] = idx;\n    setAnswers(newAnswers);\n  };\n  const handleSubmit = () => {\n    if (submitted) return;\n    const payload = questions.map((q, i) => ({\n      questionId: q._id,\n      selectedOption: answers[i]\n    }));\n    submitExam(payload, token).then(() => {\n      setSubmitted(true);\n      localStorage.removeItem(\"exam_questions\");\n      localStorage.removeItem(\"exam_answers\");\n      localStorage.removeItem(\"exam_current\");\n      localStorage.removeItem(\"exam_timeLeft\");\n      getResult(token).then(r => {\n        setResult(r.data);\n        window.location.hash = '#/results';\n      });\n    });\n  };\n  if (!questions.length && !submitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-container\",\n      style: {\n        textAlign: 'center',\n        padding: '60px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n  if (submitted && result) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Exam Submitted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '1.2em',\n          margin: '12px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), \" \", result.score, \" / \", result.review.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.hash = '#/dashboard',\n        children: \"Return to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n  const q = questions[current];\n  const minutes = Math.floor(timeLeft / 60);\n  const seconds = timeLeft % 60;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-timer\",\n      style: {\n        textAlign: 'right',\n        fontWeight: '600',\n        color: '#d32f2f',\n        marginBottom: '16px',\n        fontSize: '1.3em'\n      },\n      children: [\"Time Left: \", minutes.toString().padStart(2, '0'), \":\", seconds.toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Question \", current + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question\",\n      style: {\n        marginBottom: 16\n      },\n      children: q.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0\n      },\n      children: q.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          padding: '8px 12px',\n          margin: '6px 0',\n          border: '2px solid',\n          borderColor: answers[current] === idx ? '#1976d2' : '#ccc',\n          borderRadius: 6,\n          backgroundColor: answers[current] === idx ? '#e3f2fd' : '#fff',\n          cursor: 'pointer',\n          fontWeight: answers[current] === idx ? 600 : 400\n        },\n        onClick: () => handleOption(idx),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            marginRight: 6\n          },\n          children: [String.fromCharCode(65 + idx), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), opt]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '16px',\n        marginTop: '18px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: current === 0,\n        onClick: () => setCurrent(c => c - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: current === questions.length - 1,\n        onClick: () => setCurrent(c => c + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n\n  // Utility to shuffle array\n  const shuffleArray = arr => {\n    let newArr = [...arr];\n    for (let i = newArr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\n    }\n    return newArr;\n  };\n  useEffect(() => {\n    const storedQuestions = localStorage.getItem(\"exam_questions\");\n    const storedAnswers = localStorage.getItem(\"exam_answers\");\n    const storedCurrent = localStorage.getItem(\"exam_current\");\n    const storedTimeLeft = localStorage.getItem(\"exam_timeLeft\");\n    getResult(token).then(r => {\n      if (r.data && r.data.review) {\n        setSubmitted(true);\n        setResult(r.data);\n      } else {\n        if (storedQuestions && storedAnswers && storedCurrent && storedTimeLeft) {\n          // Existing exam in progress â€” restore it\n          setQuestions(JSON.parse(storedQuestions));\n          setAnswers(JSON.parse(storedAnswers));\n          setCurrent(parseInt(storedCurrent, 10));\n          setTimeLeft(parseInt(storedTimeLeft, 10));\n        } else {\n          // New exam â€” shuffle questions\n          getQuestions(token).then(res => {\n            const shuffled = shuffleArray(res.data);\n            setQuestions(shuffled);\n            setAnswers(Array(shuffled.length).fill(null));\n            localStorage.setItem(\"exam_questions\", JSON.stringify(shuffled));\n          });\n        }\n      }\n    }).catch(() => {\n      if (storedQuestions && storedAnswers && storedCurrent && storedTimeLeft) {\n        setQuestions(JSON.parse(storedQuestions));\n        setAnswers(JSON.parse(storedAnswers));\n        setCurrent(parseInt(storedCurrent, 10));\n        setTimeLeft(parseInt(storedTimeLeft, 10));\n      } else {\n        getQuestions(token).then(res => {\n          const shuffled = shuffleArray(res.data);\n          setQuestions(shuffled);\n          setAnswers(Array(shuffled.length).fill(null));\n          localStorage.setItem(\"exam_questions\", JSON.stringify(shuffled));\n        });\n      }\n    });\n  }, [token]);\n}\n_s(Exam, \"/Ps4o1UXiP55koto09JQL3dOPvw=\");\n_c = Exam;\nexport default Exam;\nvar _c;\n$RefreshReg$(_c, \"Exam\");","map":{"version":3,"names":["React","useState","useEffect","getQuestions","submitExam","getResult","jsxDEV","_jsxDEV","Exam","token","_s","questions","setQuestions","answers","setAnswers","current","setCurrent","submitted","setSubmitted","result","setResult","timeLeft","setTimeLeft","storedQuestions","localStorage","getItem","storedAnswers","storedCurrent","storedTimeLeft","then","r","data","review","JSON","parse","parseInt","res","Array","length","fill","setItem","stringify","catch","handleSubmit","timer","setTimeout","t","clearTimeout","handleOption","idx","newAnswers","payload","map","q","i","questionId","_id","selectedOption","removeItem","window","location","hash","className","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","margin","score","onClick","minutes","Math","floor","seconds","fontWeight","color","marginBottom","toString","padStart","question","listStyle","options","opt","border","borderColor","borderRadius","backgroundColor","cursor","marginRight","String","fromCharCode","display","gap","marginTop","disabled","c","shuffleArray","arr","newArr","j","random","shuffled","_c","$RefreshReg$"],"sources":["C:/Users/Sridh/Desktop/new-exam-builder-ace-main/frontend/src/Exam.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./Exam.css\";\r\nimport { getQuestions, submitExam, getResult } from './api';\r\n\r\nfunction Exam({ token }) {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [current, setCurrent] = useState(0);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // seconds\r\n\r\n  // Load stored exam state on mount\r\n  useEffect(() => {\r\n    const storedQuestions = localStorage.getItem(\"exam_questions\");\r\n    const storedAnswers = localStorage.getItem(\"exam_answers\");\r\n    const storedCurrent = localStorage.getItem(\"exam_current\");\r\n    const storedTimeLeft = localStorage.getItem(\"exam_timeLeft\");\r\n\r\n    getResult(token).then(r => {\r\n      if (r.data && r.data.review) {\r\n        setSubmitted(true);\r\n        setResult(r.data);\r\n      } else {\r\n        if (storedQuestions && storedAnswers && storedCurrent && storedTimeLeft) {\r\n          setQuestions(JSON.parse(storedQuestions));\r\n          setAnswers(JSON.parse(storedAnswers));\r\n          setCurrent(parseInt(storedCurrent, 10));\r\n          setTimeLeft(parseInt(storedTimeLeft, 10));\r\n        } else {\r\n          getQuestions(token).then(res => {\r\n            setQuestions(res.data);\r\n            setAnswers(Array(res.data.length).fill(null));\r\n            localStorage.setItem(\"exam_questions\", JSON.stringify(res.data));\r\n          });\r\n        }\r\n      }\r\n    }).catch(() => {\r\n      if (storedQuestions && storedAnswers && storedCurrent && storedTimeLeft) {\r\n        setQuestions(JSON.parse(storedQuestions));\r\n        setAnswers(JSON.parse(storedAnswers));\r\n        setCurrent(parseInt(storedCurrent, 10));\r\n        setTimeLeft(parseInt(storedTimeLeft, 10));\r\n      } else {\r\n        getQuestions(token).then(res => {\r\n          setQuestions(res.data);\r\n          setAnswers(Array(res.data.length).fill(null));\r\n          localStorage.setItem(\"exam_questions\", JSON.stringify(res.data));\r\n        });\r\n      }\r\n    });\r\n  }, [token]);\r\n\r\n  // Save state to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (questions.length) {\r\n      localStorage.setItem(\"exam_questions\", JSON.stringify(questions));\r\n      localStorage.setItem(\"exam_answers\", JSON.stringify(answers));\r\n      localStorage.setItem(\"exam_current\", current);\r\n      localStorage.setItem(\"exam_timeLeft\", timeLeft);\r\n    }\r\n  }, [questions, answers, current, timeLeft]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (!questions.length || submitted) return;\r\n    if (timeLeft <= 0) {\r\n      handleSubmit();\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => setTimeLeft(t => t - 1), 1000);\r\n    return () => clearTimeout(timer);\r\n  }, [questions.length, submitted, timeLeft]);\r\n\r\n  const handleOption = idx => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[current] = idx;\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (submitted) return;\r\n    const payload = questions.map((q, i) => ({ questionId: q._id, selectedOption: answers[i] }));\r\n    submitExam(payload, token).then(() => {\r\n      setSubmitted(true);\r\n      localStorage.removeItem(\"exam_questions\");\r\n      localStorage.removeItem(\"exam_answers\");\r\n      localStorage.removeItem(\"exam_current\");\r\n      localStorage.removeItem(\"exam_timeLeft\");\r\n      getResult(token).then(r => {\r\n        setResult(r.data);\r\n        window.location.hash = '#/results';\r\n      });\r\n    });\r\n  };\r\n\r\n  if (!questions.length && !submitted) {\r\n    return (\r\n      <div className=\"exam-container\" style={{ textAlign: 'center', padding: '60px 0' }}>\r\n        <h2>Loading questions...</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (submitted && result) {\r\n    return (\r\n      <div className=\"result-container card\">\r\n        <h2>Exam Submitted</h2>\r\n        <div style={{ fontSize: '1.2em', margin: '12px 0' }}>\r\n          <strong>Score:</strong> {result.score} / {result.review.length}\r\n        </div>\r\n        <button onClick={() => window.location.hash = '#/dashboard'}>Return to Dashboard</button>\r\n      </div>\r\n    );\r\n  }\r\n  const q = questions[current];\r\n  const minutes = Math.floor(timeLeft / 60);\r\n  const seconds = timeLeft % 60;\r\n\r\n  return (\r\n    <div className=\"exam-container\">\r\n      <div className=\"exam-timer\" style={{ textAlign: 'right', fontWeight: '600', color: '#d32f2f', marginBottom: '16px', fontSize: '1.3em' }}>\r\n        Time Left: {minutes.toString().padStart(2, '0')}:{seconds.toString().padStart(2, '0')}\r\n      </div>\r\n      <h3>Question {current + 1} of {questions.length}</h3>\r\n      <div className=\"question\" style={{ marginBottom: 16 }}>{q.question}</div>\r\n\r\n      <ul style={{ listStyle: 'none', padding: 0 }}>\r\n        {q.options.map((opt, idx) => (\r\n          <li\r\n            key={idx}\r\n            style={{\r\n              padding: '8px 12px',\r\n              margin: '6px 0',\r\n              border: '2px solid',\r\n              borderColor: answers[current] === idx ? '#1976d2' : '#ccc',\r\n              borderRadius: 6,\r\n              backgroundColor: answers[current] === idx ? '#e3f2fd' : '#fff',\r\n              cursor: 'pointer',\r\n              fontWeight: answers[current] === idx ? 600 : 400\r\n            }}\r\n            onClick={() => handleOption(idx)}\r\n          >\r\n            <span style={{ fontWeight: 'bold', marginRight: 6 }}>\r\n              {String.fromCharCode(65 + idx)}.\r\n            </span>\r\n            {opt}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <div style={{ display: 'flex', gap: '16px', marginTop: '18px' }}>\r\n        <button disabled={current === 0} onClick={() => setCurrent(c => c - 1)}>Previous</button>\r\n        <button disabled={current === questions.length - 1} onClick={() => setCurrent(c => c + 1)}>Next</button>\r\n        <button onClick={handleSubmit}>Submit Exam</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  // Utility to shuffle array\r\nconst shuffleArray = (arr) => {\r\n  let newArr = [...arr];\r\n  for (let i = newArr.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\r\n  }\r\n  return newArr;\r\n};\r\n\r\nuseEffect(() => {\r\n  const storedQuestions = localStorage.getItem(\"exam_questions\");\r\n  const storedAnswers = localStorage.getItem(\"exam_answers\");\r\n  const storedCurrent = localStorage.getItem(\"exam_current\");\r\n  const storedTimeLeft = localStorage.getItem(\"exam_timeLeft\");\r\n\r\n  getResult(token).then(r => {\r\n    if (r.data && r.data.review) {\r\n      setSubmitted(true);\r\n      setResult(r.data);\r\n    } else {\r\n      if (storedQuestions && storedAnswers && storedCurrent && storedTimeLeft) {\r\n        // Existing exam in progress â€” restore it\r\n        setQuestions(JSON.parse(storedQuestions));\r\n        setAnswers(JSON.parse(storedAnswers));\r\n        setCurrent(parseInt(storedCurrent, 10));\r\n        setTimeLeft(parseInt(storedTimeLeft, 10));\r\n      } else {\r\n        // New exam â€” shuffle questions\r\n        getQuestions(token).then(res => {\r\n          const shuffled = shuffleArray(res.data);\r\n          setQuestions(shuffled);\r\n          setAnswers(Array(shuffled.length).fill(null));\r\n          localStorage.setItem(\"exam_questions\", JSON.stringify(shuffled));\r\n        });\r\n      }\r\n    }\r\n  }).catch(() => {\r\n    if (storedQuestions && storedAnswers && storedCurrent && storedTimeLeft) {\r\n      setQuestions(JSON.parse(storedQuestions));\r\n      setAnswers(JSON.parse(storedAnswers));\r\n      setCurrent(parseInt(storedCurrent, 10));\r\n      setTimeLeft(parseInt(storedTimeLeft, 10));\r\n    } else {\r\n      getQuestions(token).then(res => {\r\n        const shuffled = shuffleArray(res.data);\r\n        setQuestions(shuffled);\r\n        setAnswers(Array(shuffled.length).fill(null));\r\n        localStorage.setItem(\"exam_questions\", JSON.stringify(shuffled));\r\n      });\r\n    }\r\n  });\r\n}, [token]);\r\n\r\n}\r\n\r\nexport default Exam;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}