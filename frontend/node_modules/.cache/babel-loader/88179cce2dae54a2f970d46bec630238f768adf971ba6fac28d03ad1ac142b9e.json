{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sridh\\\\Desktop\\\\new-exam-builder-ace-main\\\\frontend\\\\src\\\\Results.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { getResult } from './api';\n// import \"./Results.css\";\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n\n//   useEffect(() => {\n//     getResult(token).then(r => {\n//       if (r.data) {\n//         setResult(r.data);\n//       }\n//     }).catch(() => {\n//       console.error(\"Error fetching results\");\n//     });\n//   }, [token]);\n\n//   if (!result) {\n//     return <div className=\"exam-container card\">Loading result...</div>;\n//   }\n\n//   const review = Array.isArray(result.review) ? result.review : [];\n//   const total = review.length;\n//   const attempted = review.filter(q => q.selected !== undefined && q.selected !== null).length;\n//   const unattempted = total - attempted;\n//   const correct = review.filter(q => q.correct === q.selected).length;\n//   const wrong = attempted - correct;\n//   const percent = total ? Math.round((correct / total) * 100) : 0;\n//   const q = review[current];\n\n//   return (\n//     <div className=\"result-container card\" style={{ maxWidth: '1200px', width: '98vw', margin: '0 auto' }}>\n//       <h2>Exam Submitted</h2>\n\n//       {/* Score and Percentage */}\n//       <div style={{ fontSize: '1.2em', margin: '12px 0', display: 'flex', justifyContent: 'space-between', maxWidth: 500, gap: '20px'}}>\n//         <div><strong>Score:</strong> {result.score} / {total}</div>\n//         <div><strong>Percentage:</strong> {percent}% / 100%</div>\n//       </div>\n\n//       {/* Stats */}\n//       <div style={{ display: 'flex', gap: '20px', marginBottom: '12px', flexWrap: 'wrap' }}>\n//         <div><strong>Correct:</strong> {correct}</div>\n//         <div><strong>Wrong:</strong> {wrong}</div>\n//         <div><strong>Unattempted:</strong> {unattempted}</div>\n//       </div>\n\n//       <div>Submitted At: {new Date(result.submittedAt).toLocaleString()}</div>\n\n//       <h3 style={{ marginTop: 24 }}>Review Your Answers</h3>\n//       {q && (\n//         <div className=\"review-card\" style={{ margin: '0 auto', maxWidth: '900px' }}>\n//           <div className=\"review-question\">{current + 1}. {q.question}</div>\n//           <div className=\"review-status\">\n//             <span style={{ \n//               color: q.correct === q.selected ? '#43cea2' : \n//                      (q.selected === undefined || q.selected === null ? '#ff0400ff' : '#d32f2f'), \n//               fontWeight: 600 \n//             }}>\n//               {q.correct === q.selected \n//                 ? 'Correct' \n//                 : (q.selected === undefined || q.selected === null \n//                     ? 'Not Answered' \n//                     : 'Wrong')}\n//             </span>\n//           </div>\n\n//           {/* Options */}\n//           <ul className=\"review-options\" style={{ listStyle: 'none', padding: 0 }}>\n//             {q.options.map((opt, i) => (\n//               <li\n//                 key={i}\n//                 style={{\n//                   padding: '8px 12px',\n//                   margin: '6px 0',\n//                   border: '2px solid',\n//                   borderColor:\n//                     q.correct === i\n//                       ? '#43cea2'\n//                       : q.selected === i && q.correct !== i\n//                       ? '#d32f2f'\n//                       : '#ccc',\n//                   borderRadius: 6,\n//                   backgroundColor:\n//                     q.correct === i\n//                       ? '#e6f9f2'\n//                       : q.selected === i && q.correct !== i\n//                       ? '#fdecea'\n//                       : '#fff',\n//                   color:\n//                     q.correct === i\n//                       ? '#2e7d32'\n//                       : q.selected === i && q.correct !== i\n//                       ? '#c62828'\n//                       : '#333',\n//                   fontWeight:\n//                     q.correct === i || q.selected === i ? 600 : 400\n//                 }}\n//               >\n//                 <span style={{ fontWeight: 'bold', marginRight: 6 }}>\n//                   {String.fromCharCode(65 + i)}.\n//                 </span>\n//                 {opt}\n//                 {q.correct === i ? ' (Correct)' : ''}\n//                 {q.selected === i && q.correct !== i ? ' (Your answer)' : ''}\n//               </li>\n//             ))}\n\n//             {/* No answer case */}\n//             {(q.selected === undefined || q.selected === null) && (\n//               <li\n//                 style={{\n//                   padding: '8px 12px',\n//                   margin: '6px 0',\n//                   border: '2px dashed #aaa',\n//                   borderRadius: 6,\n//                   backgroundColor: '#fff8e1',\n//                   color: '#8d6e63',\n//                   fontStyle: 'italic'\n//                 }}\n//               >\n//                 You did not select an answer for this question.\n//               </li>\n//             )}\n//           </ul>\n//         </div>\n//       )}\n\n//       {/* Navigation */}\n//       <div style={{ display: 'flex', justifyContent: 'center', gap: 16, margin: '24px 0' }}>\n//         <button\n//           disabled={current === 0}\n//           onClick={() => setCurrent(c => c - 1)}\n//         >\n//           Previous\n//         </button>\n//         <span>Question {current + 1} of {total}</span>\n//         <button\n//           disabled={current === total - 1}\n//           onClick={() => setCurrent(c => c + 1)}\n//         >\n//           Next\n//         </button>\n//       </div>\n\n//       {/* Dashboard */}\n//       <button\n//         style={{\n//           padding: '10px 16px',\n//           background: '#43cea2',\n//           color: 'white',\n//           border: 'none',\n//           borderRadius: 6,\n//           cursor: 'pointer'\n//         }}\n//         onClick={() => window.location.hash = '#/dashboard'}\n//       >\n//         Return to Dashboard\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default Results;\n\n// import React, { useEffect, useState } from 'react';\n// import { getResult } from './api';\n// import \"./Results.css\";\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n\n//   useEffect(() => {\n//     if (!token) return;\n\n//     getResult(token)\n//       .then(res => {\n//         if (res.data) {\n//           setResult(res.data);\n//         }\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching results:\", err);\n//       });\n//   }, [token]);\n\n//   if (!result) {\n//     return <div className=\"exam-container card\" style={{ textAlign: 'center', padding: '60px 0' }}>Loading result...</div>;\n//   }\n\n//   const review = Array.isArray(result.review) ? result.review : [];\n//   const total = review.length;\n//   const attempted = review.filter(q => q.selected !== undefined && q.selected !== null).length;\n//   const unattempted = total - attempted;\n//   const correct = review.filter(q => q.correct === q.selected).length;\n//   const wrong = attempted - correct;\n//   const percent = total ? Math.round((correct / total) * 100) : 0;\n//   const q = review[current];\n\n//   return (\n//     <div className=\"result-container card\" style={{ maxWidth: '1200px', width: '98vw', margin: '0 auto' }}>\n//       <h2>Exam Submitted</h2>\n\n//       {/* Score and Percentage */}\n//       <div style={{ fontSize: '1.2em', margin: '12px 0', display: 'flex', justifyContent: 'space-between', maxWidth: 500, gap: '20px' }}>\n//         <div><strong>Score:</strong> {correct} / {total}</div>\n//         <div><strong>Percentage:</strong> {percent}%</div>\n//       </div>\n\n//       {/* Stats */}\n//       <div style={{ display: 'flex', gap: '20px', marginBottom: '12px', flexWrap: 'wrap' }}>\n//         <div><strong>Correct:</strong> {correct}</div>\n//         <div><strong>Wrong:</strong> {wrong}</div>\n//         <div><strong>Unattempted:</strong> {unattempted}</div>\n//       </div>\n\n//       <div>Submitted At: {new Date(result.submittedAt).toLocaleString()}</div>\n\n//       {/* Review Section */}\n//       {q && (\n//         <>\n//           <h3 style={{ marginTop: 24 }}>Review Your Answers</h3>\n//           <div className=\"review-card\" style={{ margin: '0 auto', maxWidth: '900px' }}>\n//             <div className=\"review-question\">{current + 1}. {q.question}</div>\n//             <div className=\"review-status\">\n//               <span style={{\n//                 color: q.correct === q.selected ? '#43cea2' :\n//                   (q.selected === undefined || q.selected === null ? '#ff0400' : '#d32f2f'),\n//                 fontWeight: 600\n//               }}>\n//                 {q.correct === q.selected\n//                   ? 'Correct'\n//                   : (q.selected === undefined || q.selected === null\n//                     ? 'Not Answered'\n//                     : 'Wrong')}\n//               </span>\n//             </div>\n\n//             {/* Options */}\n//             <ul className=\"review-options\" style={{ listStyle: 'none', padding: 0 }}>\n//               {q.options.map((opt, i) => (\n//                 <li key={i} style={{\n//                   padding: '8px 12px',\n//                   margin: '6px 0',\n//                   border: '2px solid',\n//                   borderColor:\n//                     q.correct === i\n//                       ? '#43cea2'\n//                       : q.selected === i && q.correct !== i\n//                         ? '#d32f2f'\n//                         : '#ccc',\n//                   borderRadius: 6,\n//                   backgroundColor:\n//                     q.correct === i\n//                       ? '#e6f9f2'\n//                       : q.selected === i && q.correct !== i\n//                         ? '#fdecea'\n//                         : '#fff',\n//                   color:\n//                     q.correct === i\n//                       ? '#2e7d32'\n//                       : q.selected === i && q.correct !== i\n//                         ? '#c62828'\n//                         : '#333',\n//                   fontWeight:\n//                     q.correct === i || q.selected === i ? 600 : 400\n//                 }}>\n//                   <span style={{ fontWeight: 'bold', marginRight: 6 }}>\n//                     {String.fromCharCode(65 + i)}.\n//                   </span>\n//                   {opt}\n//                   {q.correct === i ? ' (Correct)' : ''}\n//                   {q.selected === i && q.correct !== i ? ' (Your answer)' : ''}\n//                 </li>\n//               ))}\n\n//               {/* No answer case */}\n//               {(q.selected === undefined || q.selected === null) && (\n//                 <li style={{\n//                   padding: '8px 12px',\n//                   margin: '6px 0',\n//                   border: '2px dashed #aaa',\n//                   borderRadius: 6,\n//                   backgroundColor: '#fff8e1',\n//                   color: '#8d6e63',\n//                   fontStyle: 'italic'\n//                 }}>\n//                   You did not select an answer for this question.\n//                 </li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Navigation */}\n//           <div style={{ display: 'flex', justifyContent: 'center', gap: 16, margin: '24px 0' }}>\n//             <button disabled={current === 0} onClick={() => setCurrent(c => c - 1)}>Previous</button>\n//             <span>Question {current + 1} of {total}</span>\n//             <button disabled={current === total - 1} onClick={() => setCurrent(c => c + 1)}>Next</button>\n//           </div>\n//         </>\n//       )}\n\n//       {/* Back to Dashboard */}\n//       <button\n//         style={{\n//           padding: '10px 16px',\n//           background: '#43cea2',\n//           color: 'white',\n//           border: 'none',\n//           borderRadius: 6,\n//           cursor: 'pointer'\n//         }}\n//         onClick={() => window.location.hash = '#/dashboard'}\n//       >\n//         Return to Dashboard\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default Results;\n\n// import React, { useEffect, useState } from 'react';\n// import { getResult } from './api';\n// import './Results.css';\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n\n//   useEffect(() => {\n//     getResult(token).then(r => setResult(r.data));\n//   }, [token]);\n\n//   if (!result) return <div>Loading result...</div>;\n\n//   const review = result.review || [];\n//   const total = review.length;\n\n//   return (\n//     <div className=\"result-container\">\n//       <h2>Exam Submitted</h2>\n//       <div>Score: {result.score} / {total}</div>\n//       {review[current] && <div>\n//         <div>{current+1}. {review[current].question}</div>\n//         <div>Correct answer: {review[current].correct}</div>\n//         <div>Your answer: {review[current].selected}</div>\n//       </div>}\n//       <div>\n//         <button disabled={current===0} onClick={()=>setCurrent(c=>c-1)}>Previous</button>\n//         <button disabled={current===total-1} onClick={()=>setCurrent(c=>c+1)}>Next</button>\n//       </div>\n//       <button onClick={()=>window.location.hash='#/dashboard'}>Return to Dashboard</button>\n//     </div>\n//   );\n// }\n\n// export default Results;\n// import React, { useEffect, useState } from \"react\";\n// import { getResult } from \"./api\";\n// import \"./Results.css\";\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n\n//   useEffect(() => {\n//     getResult(token)\n//       .then((r) => setResult(r.data))\n//       .catch((err) => console.error(\"Error fetching result:\", err));\n//   }, [token]);\n\n//   if (!result) {\n//     return <div className=\"loading-message\">Loading your results...</div>;\n//   }\n\n//   const review = result.review || [];\n//   const total = review.length;\n\n//   const goPrev = () => setCurrent((c) => Math.max(0, c - 1));\n//   const goNext = () => setCurrent((c) => Math.min(total - 1, c + 1));\n\n//   return (\n//     <div className=\"result-container\">\n//       <h2 className=\"result-title\">🎯 Exam Results</h2>\n//       <p className=\"score\">\n//         Your Score: <span>{result.score}</span> / {total}\n//       </p>\n\n//       {review[current] && (\n//         <div className=\"question-card\">\n//           <h3>\n//             {current + 1}. {review[current].question}\n//           </h3>\n//           <p>\n//             ✅ Correct Answer:{\" \"}\n//             <span className=\"correct\">{review[current].correct}</span>\n//           </p>\n//           <p>\n//             📝 Your Answer:{\" \"}\n//             <span\n//               className={\n//                 review[current].selected === review[current].correct\n//                   ? \"correct\"\n//                   : \"wrong\"\n//               }\n//             >\n//               {review[current].selected || \"No Answer\"}\n//             </span>\n//           </p>\n//         </div>\n//       )}\n\n//       <div className=\"nav-buttons\">\n//         <button\n//           onClick={goPrev}\n//           disabled={current === 0}\n//           className=\"nav-btn prev\"\n//         >\n//           ⬅ Previous\n//         </button>\n//         <button\n//           onClick={goNext}\n//           disabled={current === total - 1}\n//           className=\"nav-btn next\"\n//         >\n//           Next ➡\n//         </button>\n//       </div>\n\n//       <button\n//         className=\"dashboard-btn\"\n//         onClick={() => (window.location.hash = \"#/dashboard\")}\n//       >\n//         Return to Dashboard\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default Results;\nimport React, { useEffect, useState } from \"react\";\nimport { getResult } from \"./api\";\nimport \"./Results.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Results({\n  token\n}) {\n  _s();\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    getResult(token).then(r => setResult(r.data));\n  }, [token]);\n  if (!result) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading result...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exam Submitted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: result.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 16\n      }, this), \" / \", result.review.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-list\",\n      children: result.review.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [index + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), \" \", item.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2705 Correct Answer:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"correct\",\n            children: item.correct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: item.selected === item.correct ? \"correct\" : \"incorrect\",\n          children: [\"\\uD83D\\uDCDD Your Answer: \", item.selected]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => window.location.hash = \"#/dashboard\",\n      children: \"Return to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n}\n_s(Results, \"otsdU8867Nll1OjDzAJiWNisW5I=\");\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useEffect","useState","getResult","jsxDEV","_jsxDEV","Results","token","_s","result","setResult","then","r","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","score","review","length","map","item","index","question","correct","selected","onClick","window","location","hash","_c","$RefreshReg$"],"sources":["C:/Users/Sridh/Desktop/new-exam-builder-ace-main/frontend/src/Results.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { getResult } from './api';\r\n// import \"./Results.css\";\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     getResult(token).then(r => {\r\n//       if (r.data) {\r\n//         setResult(r.data);\r\n//       }\r\n//     }).catch(() => {\r\n//       console.error(\"Error fetching results\");\r\n//     });\r\n//   }, [token]);\r\n\r\n//   if (!result) {\r\n//     return <div className=\"exam-container card\">Loading result...</div>;\r\n//   }\r\n\r\n//   const review = Array.isArray(result.review) ? result.review : [];\r\n//   const total = review.length;\r\n//   const attempted = review.filter(q => q.selected !== undefined && q.selected !== null).length;\r\n//   const unattempted = total - attempted;\r\n//   const correct = review.filter(q => q.correct === q.selected).length;\r\n//   const wrong = attempted - correct;\r\n//   const percent = total ? Math.round((correct / total) * 100) : 0;\r\n//   const q = review[current];\r\n\r\n//   return (\r\n//     <div className=\"result-container card\" style={{ maxWidth: '1200px', width: '98vw', margin: '0 auto' }}>\r\n//       <h2>Exam Submitted</h2>\r\n\r\n//       {/* Score and Percentage */}\r\n//       <div style={{ fontSize: '1.2em', margin: '12px 0', display: 'flex', justifyContent: 'space-between', maxWidth: 500, gap: '20px'}}>\r\n//         <div><strong>Score:</strong> {result.score} / {total}</div>\r\n//         <div><strong>Percentage:</strong> {percent}% / 100%</div>\r\n//       </div>\r\n\r\n//       {/* Stats */}\r\n//       <div style={{ display: 'flex', gap: '20px', marginBottom: '12px', flexWrap: 'wrap' }}>\r\n//         <div><strong>Correct:</strong> {correct}</div>\r\n//         <div><strong>Wrong:</strong> {wrong}</div>\r\n//         <div><strong>Unattempted:</strong> {unattempted}</div>\r\n//       </div>\r\n\r\n//       <div>Submitted At: {new Date(result.submittedAt).toLocaleString()}</div>\r\n\r\n//       <h3 style={{ marginTop: 24 }}>Review Your Answers</h3>\r\n//       {q && (\r\n//         <div className=\"review-card\" style={{ margin: '0 auto', maxWidth: '900px' }}>\r\n//           <div className=\"review-question\">{current + 1}. {q.question}</div>\r\n//           <div className=\"review-status\">\r\n//             <span style={{ \r\n//               color: q.correct === q.selected ? '#43cea2' : \r\n//                      (q.selected === undefined || q.selected === null ? '#ff0400ff' : '#d32f2f'), \r\n//               fontWeight: 600 \r\n//             }}>\r\n//               {q.correct === q.selected \r\n//                 ? 'Correct' \r\n//                 : (q.selected === undefined || q.selected === null \r\n//                     ? 'Not Answered' \r\n//                     : 'Wrong')}\r\n//             </span>\r\n//           </div>\r\n\r\n//           {/* Options */}\r\n//           <ul className=\"review-options\" style={{ listStyle: 'none', padding: 0 }}>\r\n//             {q.options.map((opt, i) => (\r\n//               <li\r\n//                 key={i}\r\n//                 style={{\r\n//                   padding: '8px 12px',\r\n//                   margin: '6px 0',\r\n//                   border: '2px solid',\r\n//                   borderColor:\r\n//                     q.correct === i\r\n//                       ? '#43cea2'\r\n//                       : q.selected === i && q.correct !== i\r\n//                       ? '#d32f2f'\r\n//                       : '#ccc',\r\n//                   borderRadius: 6,\r\n//                   backgroundColor:\r\n//                     q.correct === i\r\n//                       ? '#e6f9f2'\r\n//                       : q.selected === i && q.correct !== i\r\n//                       ? '#fdecea'\r\n//                       : '#fff',\r\n//                   color:\r\n//                     q.correct === i\r\n//                       ? '#2e7d32'\r\n//                       : q.selected === i && q.correct !== i\r\n//                       ? '#c62828'\r\n//                       : '#333',\r\n//                   fontWeight:\r\n//                     q.correct === i || q.selected === i ? 600 : 400\r\n//                 }}\r\n//               >\r\n//                 <span style={{ fontWeight: 'bold', marginRight: 6 }}>\r\n//                   {String.fromCharCode(65 + i)}.\r\n//                 </span>\r\n//                 {opt}\r\n//                 {q.correct === i ? ' (Correct)' : ''}\r\n//                 {q.selected === i && q.correct !== i ? ' (Your answer)' : ''}\r\n//               </li>\r\n//             ))}\r\n\r\n//             {/* No answer case */}\r\n//             {(q.selected === undefined || q.selected === null) && (\r\n//               <li\r\n//                 style={{\r\n//                   padding: '8px 12px',\r\n//                   margin: '6px 0',\r\n//                   border: '2px dashed #aaa',\r\n//                   borderRadius: 6,\r\n//                   backgroundColor: '#fff8e1',\r\n//                   color: '#8d6e63',\r\n//                   fontStyle: 'italic'\r\n//                 }}\r\n//               >\r\n//                 You did not select an answer for this question.\r\n//               </li>\r\n//             )}\r\n//           </ul>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Navigation */}\r\n//       <div style={{ display: 'flex', justifyContent: 'center', gap: 16, margin: '24px 0' }}>\r\n//         <button\r\n//           disabled={current === 0}\r\n//           onClick={() => setCurrent(c => c - 1)}\r\n//         >\r\n//           Previous\r\n//         </button>\r\n//         <span>Question {current + 1} of {total}</span>\r\n//         <button\r\n//           disabled={current === total - 1}\r\n//           onClick={() => setCurrent(c => c + 1)}\r\n//         >\r\n//           Next\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Dashboard */}\r\n//       <button\r\n//         style={{\r\n//           padding: '10px 16px',\r\n//           background: '#43cea2',\r\n//           color: 'white',\r\n//           border: 'none',\r\n//           borderRadius: 6,\r\n//           cursor: 'pointer'\r\n//         }}\r\n//         onClick={() => window.location.hash = '#/dashboard'}\r\n//       >\r\n//         Return to Dashboard\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getResult } from './api';\r\n// import \"./Results.css\";\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n\r\n//     getResult(token)\r\n//       .then(res => {\r\n//         if (res.data) {\r\n//           setResult(res.data);\r\n//         }\r\n//       })\r\n//       .catch(err => {\r\n//         console.error(\"Error fetching results:\", err);\r\n//       });\r\n//   }, [token]);\r\n\r\n//   if (!result) {\r\n//     return <div className=\"exam-container card\" style={{ textAlign: 'center', padding: '60px 0' }}>Loading result...</div>;\r\n//   }\r\n\r\n//   const review = Array.isArray(result.review) ? result.review : [];\r\n//   const total = review.length;\r\n//   const attempted = review.filter(q => q.selected !== undefined && q.selected !== null).length;\r\n//   const unattempted = total - attempted;\r\n//   const correct = review.filter(q => q.correct === q.selected).length;\r\n//   const wrong = attempted - correct;\r\n//   const percent = total ? Math.round((correct / total) * 100) : 0;\r\n//   const q = review[current];\r\n\r\n//   return (\r\n//     <div className=\"result-container card\" style={{ maxWidth: '1200px', width: '98vw', margin: '0 auto' }}>\r\n//       <h2>Exam Submitted</h2>\r\n\r\n//       {/* Score and Percentage */}\r\n//       <div style={{ fontSize: '1.2em', margin: '12px 0', display: 'flex', justifyContent: 'space-between', maxWidth: 500, gap: '20px' }}>\r\n//         <div><strong>Score:</strong> {correct} / {total}</div>\r\n//         <div><strong>Percentage:</strong> {percent}%</div>\r\n//       </div>\r\n\r\n//       {/* Stats */}\r\n//       <div style={{ display: 'flex', gap: '20px', marginBottom: '12px', flexWrap: 'wrap' }}>\r\n//         <div><strong>Correct:</strong> {correct}</div>\r\n//         <div><strong>Wrong:</strong> {wrong}</div>\r\n//         <div><strong>Unattempted:</strong> {unattempted}</div>\r\n//       </div>\r\n\r\n//       <div>Submitted At: {new Date(result.submittedAt).toLocaleString()}</div>\r\n\r\n//       {/* Review Section */}\r\n//       {q && (\r\n//         <>\r\n//           <h3 style={{ marginTop: 24 }}>Review Your Answers</h3>\r\n//           <div className=\"review-card\" style={{ margin: '0 auto', maxWidth: '900px' }}>\r\n//             <div className=\"review-question\">{current + 1}. {q.question}</div>\r\n//             <div className=\"review-status\">\r\n//               <span style={{\r\n//                 color: q.correct === q.selected ? '#43cea2' :\r\n//                   (q.selected === undefined || q.selected === null ? '#ff0400' : '#d32f2f'),\r\n//                 fontWeight: 600\r\n//               }}>\r\n//                 {q.correct === q.selected\r\n//                   ? 'Correct'\r\n//                   : (q.selected === undefined || q.selected === null\r\n//                     ? 'Not Answered'\r\n//                     : 'Wrong')}\r\n//               </span>\r\n//             </div>\r\n\r\n//             {/* Options */}\r\n//             <ul className=\"review-options\" style={{ listStyle: 'none', padding: 0 }}>\r\n//               {q.options.map((opt, i) => (\r\n//                 <li key={i} style={{\r\n//                   padding: '8px 12px',\r\n//                   margin: '6px 0',\r\n//                   border: '2px solid',\r\n//                   borderColor:\r\n//                     q.correct === i\r\n//                       ? '#43cea2'\r\n//                       : q.selected === i && q.correct !== i\r\n//                         ? '#d32f2f'\r\n//                         : '#ccc',\r\n//                   borderRadius: 6,\r\n//                   backgroundColor:\r\n//                     q.correct === i\r\n//                       ? '#e6f9f2'\r\n//                       : q.selected === i && q.correct !== i\r\n//                         ? '#fdecea'\r\n//                         : '#fff',\r\n//                   color:\r\n//                     q.correct === i\r\n//                       ? '#2e7d32'\r\n//                       : q.selected === i && q.correct !== i\r\n//                         ? '#c62828'\r\n//                         : '#333',\r\n//                   fontWeight:\r\n//                     q.correct === i || q.selected === i ? 600 : 400\r\n//                 }}>\r\n//                   <span style={{ fontWeight: 'bold', marginRight: 6 }}>\r\n//                     {String.fromCharCode(65 + i)}.\r\n//                   </span>\r\n//                   {opt}\r\n//                   {q.correct === i ? ' (Correct)' : ''}\r\n//                   {q.selected === i && q.correct !== i ? ' (Your answer)' : ''}\r\n//                 </li>\r\n//               ))}\r\n\r\n//               {/* No answer case */}\r\n//               {(q.selected === undefined || q.selected === null) && (\r\n//                 <li style={{\r\n//                   padding: '8px 12px',\r\n//                   margin: '6px 0',\r\n//                   border: '2px dashed #aaa',\r\n//                   borderRadius: 6,\r\n//                   backgroundColor: '#fff8e1',\r\n//                   color: '#8d6e63',\r\n//                   fontStyle: 'italic'\r\n//                 }}>\r\n//                   You did not select an answer for this question.\r\n//                 </li>\r\n//               )}\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Navigation */}\r\n//           <div style={{ display: 'flex', justifyContent: 'center', gap: 16, margin: '24px 0' }}>\r\n//             <button disabled={current === 0} onClick={() => setCurrent(c => c - 1)}>Previous</button>\r\n//             <span>Question {current + 1} of {total}</span>\r\n//             <button disabled={current === total - 1} onClick={() => setCurrent(c => c + 1)}>Next</button>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n\r\n//       {/* Back to Dashboard */}\r\n//       <button\r\n//         style={{\r\n//           padding: '10px 16px',\r\n//           background: '#43cea2',\r\n//           color: 'white',\r\n//           border: 'none',\r\n//           borderRadius: 6,\r\n//           cursor: 'pointer'\r\n//         }}\r\n//         onClick={() => window.location.hash = '#/dashboard'}\r\n//       >\r\n//         Return to Dashboard\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getResult } from './api';\r\n// import './Results.css';\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     getResult(token).then(r => setResult(r.data));\r\n//   }, [token]);\r\n\r\n//   if (!result) return <div>Loading result...</div>;\r\n\r\n//   const review = result.review || [];\r\n//   const total = review.length;\r\n\r\n//   return (\r\n//     <div className=\"result-container\">\r\n//       <h2>Exam Submitted</h2>\r\n//       <div>Score: {result.score} / {total}</div>\r\n//       {review[current] && <div>\r\n//         <div>{current+1}. {review[current].question}</div>\r\n//         <div>Correct answer: {review[current].correct}</div>\r\n//         <div>Your answer: {review[current].selected}</div>\r\n//       </div>}\r\n//       <div>\r\n//         <button disabled={current===0} onClick={()=>setCurrent(c=>c-1)}>Previous</button>\r\n//         <button disabled={current===total-1} onClick={()=>setCurrent(c=>c+1)}>Next</button>\r\n//       </div>\r\n//       <button onClick={()=>window.location.hash='#/dashboard'}>Return to Dashboard</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { getResult } from \"./api\";\r\n// import \"./Results.css\";\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     getResult(token)\r\n//       .then((r) => setResult(r.data))\r\n//       .catch((err) => console.error(\"Error fetching result:\", err));\r\n//   }, [token]);\r\n\r\n//   if (!result) {\r\n//     return <div className=\"loading-message\">Loading your results...</div>;\r\n//   }\r\n\r\n//   const review = result.review || [];\r\n//   const total = review.length;\r\n\r\n//   const goPrev = () => setCurrent((c) => Math.max(0, c - 1));\r\n//   const goNext = () => setCurrent((c) => Math.min(total - 1, c + 1));\r\n\r\n//   return (\r\n//     <div className=\"result-container\">\r\n//       <h2 className=\"result-title\">🎯 Exam Results</h2>\r\n//       <p className=\"score\">\r\n//         Your Score: <span>{result.score}</span> / {total}\r\n//       </p>\r\n\r\n//       {review[current] && (\r\n//         <div className=\"question-card\">\r\n//           <h3>\r\n//             {current + 1}. {review[current].question}\r\n//           </h3>\r\n//           <p>\r\n//             ✅ Correct Answer:{\" \"}\r\n//             <span className=\"correct\">{review[current].correct}</span>\r\n//           </p>\r\n//           <p>\r\n//             📝 Your Answer:{\" \"}\r\n//             <span\r\n//               className={\r\n//                 review[current].selected === review[current].correct\r\n//                   ? \"correct\"\r\n//                   : \"wrong\"\r\n//               }\r\n//             >\r\n//               {review[current].selected || \"No Answer\"}\r\n//             </span>\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className=\"nav-buttons\">\r\n//         <button\r\n//           onClick={goPrev}\r\n//           disabled={current === 0}\r\n//           className=\"nav-btn prev\"\r\n//         >\r\n//           ⬅ Previous\r\n//         </button>\r\n//         <button\r\n//           onClick={goNext}\r\n//           disabled={current === total - 1}\r\n//           className=\"nav-btn next\"\r\n//         >\r\n//           Next ➡\r\n//         </button>\r\n//       </div>\r\n\r\n//       <button\r\n//         className=\"dashboard-btn\"\r\n//         onClick={() => (window.location.hash = \"#/dashboard\")}\r\n//       >\r\n//         Return to Dashboard\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getResult } from \"./api\";\r\nimport \"./Results.css\";\r\n\r\nfunction Results({ token }) {\r\n  const [result, setResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getResult(token).then((r) => setResult(r.data));\r\n  }, [token]);\r\n\r\n  if (!result) return <div>Loading result...</div>;\r\n\r\n  return (\r\n    <div className=\"result-container\">\r\n      <h2>Exam Submitted</h2>\r\n      <div className=\"score\">\r\n        Score: <strong>{result.score}</strong> / {result.review.length}\r\n      </div>\r\n\r\n      <div className=\"review-list\">\r\n        {result.review.map((item, index) => (\r\n          <div key={index} className=\"review-item\">\r\n            <p>\r\n              <strong>{index + 1}.</strong> {item.question}\r\n            </p>\r\n            <p>\r\n              ✅ Correct Answer:{\" \"}\r\n              <span className=\"correct\">{item.correct}</span>\r\n            </p>\r\n            <p\r\n              className={\r\n                item.selected === item.correct ? \"correct\" : \"incorrect\"\r\n              }\r\n            >\r\n              📝 Your Answer: {item.selected}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        className=\"back-btn\"\r\n        onClick={() => (window.location.hash = \"#/dashboard\")}\r\n      >\r\n        Return to Dashboard\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdE,SAAS,CAACI,KAAK,CAAC,CAACI,IAAI,CAAEC,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACC,IAAI,CAAC,CAAC;EACjD,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,IAAI,CAACE,MAAM,EAAE,oBAAOJ,OAAA;IAAAS,QAAA,EAAK;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEhD,oBACEb,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAL,QAAA,gBAC/BT,OAAA;MAAAS,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBb,OAAA;MAAKc,SAAS,EAAC,OAAO;MAAAL,QAAA,GAAC,SACd,eAAAT,OAAA;QAAAS,QAAA,EAASL,MAAM,CAACW;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,OAAG,EAACT,MAAM,CAACY,MAAM,CAACC,MAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAENb,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAL,QAAA,EACzBL,MAAM,CAACY,MAAM,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7BpB,OAAA;QAAiBc,SAAS,EAAC,aAAa;QAAAL,QAAA,gBACtCT,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,GAASW,KAAK,GAAG,CAAC,EAAC,GAAC;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACM,IAAI,CAACE,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,eACJb,OAAA;UAAAS,QAAA,GAAG,wBACgB,EAAC,GAAG,eACrBT,OAAA;YAAMc,SAAS,EAAC,SAAS;YAAAL,QAAA,EAAEU,IAAI,CAACG;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACJb,OAAA;UACEc,SAAS,EACPK,IAAI,CAACI,QAAQ,KAAKJ,IAAI,CAACG,OAAO,GAAG,SAAS,GAAG,WAC9C;UAAAb,QAAA,GACF,4BACiB,EAACU,IAAI,CAACI,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA,GAdIO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENb,OAAA;MACEc,SAAS,EAAC,UAAU;MACpBU,OAAO,EAAEA,CAAA,KAAOC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAe;MAAAlB,QAAA,EACvD;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACV,EAAA,CA7CQF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AA+ChB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}