{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sridh\\\\Desktop\\\\new-exam-builder-ace-main\\\\frontend\\\\src\\\\Results.js\";\n// import React, { useEffect, useState } from 'react';\n// import { getResult } from './api';\n// import \"./Results.css\";\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n\n//   useEffect(() => {\n//     getResult(token).then(r => {\n//       if (r.data) {\n//         setResult(r.data);\n//       }\n//     }).catch(() => {\n//       console.error(\"Error fetching results\");\n//     });\n//   }, [token]);\n\n//   if (!result) {\n//     return <div className=\"exam-container card\">Loading result...</div>;\n//   }\n\n//   const review = Array.isArray(result.review) ? result.review : [];\n//   const total = review.length;\n//   const attempted = review.filter(q => q.selected !== undefined && q.selected !== null).length;\n//   const unattempted = total - attempted;\n//   const correct = review.filter(q => q.correct === q.selected).length;\n//   const wrong = attempted - correct;\n//   const percent = total ? Math.round((correct / total) * 100) : 0;\n//   const q = review[current];\n\n//   return (\n//     <div className=\"result-container card\" style={{ maxWidth: '1200px', width: '98vw', margin: '0 auto' }}>\n//       <h2>Exam Submitted</h2>\n\n//       {/* Score and Percentage */}\n//       <div style={{ fontSize: '1.2em', margin: '12px 0', display: 'flex', justifyContent: 'space-between', maxWidth: 500, gap: '20px'}}>\n//         <div><strong>Score:</strong> {result.score} / {total}</div>\n//         <div><strong>Percentage:</strong> {percent}% / 100%</div>\n//       </div>\n\n//       {/* Stats */}\n//       <div style={{ display: 'flex', gap: '20px', marginBottom: '12px', flexWrap: 'wrap' }}>\n//         <div><strong>Correct:</strong> {correct}</div>\n//         <div><strong>Wrong:</strong> {wrong}</div>\n//         <div><strong>Unattempted:</strong> {unattempted}</div>\n//       </div>\n\n//       <div>Submitted At: {new Date(result.submittedAt).toLocaleString()}</div>\n\n//       <h3 style={{ marginTop: 24 }}>Review Your Answers</h3>\n//       {q && (\n//         <div className=\"review-card\" style={{ margin: '0 auto', maxWidth: '900px' }}>\n//           <div className=\"review-question\">{current + 1}. {q.question}</div>\n//           <div className=\"review-status\">\n//             <span style={{ \n//               color: q.correct === q.selected ? '#43cea2' : \n//                      (q.selected === undefined || q.selected === null ? '#ff0400ff' : '#d32f2f'), \n//               fontWeight: 600 \n//             }}>\n//               {q.correct === q.selected \n//                 ? 'Correct' \n//                 : (q.selected === undefined || q.selected === null \n//                     ? 'Not Answered' \n//                     : 'Wrong')}\n//             </span>\n//           </div>\n\n//           {/* Options */}\n//           <ul className=\"review-options\" style={{ listStyle: 'none', padding: 0 }}>\n//             {q.options.map((opt, i) => (\n//               <li\n//                 key={i}\n//                 style={{\n//                   padding: '8px 12px',\n//                   margin: '6px 0',\n//                   border: '2px solid',\n//                   borderColor:\n//                     q.correct === i\n//                       ? '#43cea2'\n//                       : q.selected === i && q.correct !== i\n//                       ? '#d32f2f'\n//                       : '#ccc',\n//                   borderRadius: 6,\n//                   backgroundColor:\n//                     q.correct === i\n//                       ? '#e6f9f2'\n//                       : q.selected === i && q.correct !== i\n//                       ? '#fdecea'\n//                       : '#fff',\n//                   color:\n//                     q.correct === i\n//                       ? '#2e7d32'\n//                       : q.selected === i && q.correct !== i\n//                       ? '#c62828'\n//                       : '#333',\n//                   fontWeight:\n//                     q.correct === i || q.selected === i ? 600 : 400\n//                 }}\n//               >\n//                 <span style={{ fontWeight: 'bold', marginRight: 6 }}>\n//                   {String.fromCharCode(65 + i)}.\n//                 </span>\n//                 {opt}\n//                 {q.correct === i ? ' (Correct)' : ''}\n//                 {q.selected === i && q.correct !== i ? ' (Your answer)' : ''}\n//               </li>\n//             ))}\n\n//             {/* No answer case */}\n//             {(q.selected === undefined || q.selected === null) && (\n//               <li\n//                 style={{\n//                   padding: '8px 12px',\n//                   margin: '6px 0',\n//                   border: '2px dashed #aaa',\n//                   borderRadius: 6,\n//                   backgroundColor: '#fff8e1',\n//                   color: '#8d6e63',\n//                   fontStyle: 'italic'\n//                 }}\n//               >\n//                 You did not select an answer for this question.\n//               </li>\n//             )}\n//           </ul>\n//         </div>\n//       )}\n\n//       {/* Navigation */}\n//       <div style={{ display: 'flex', justifyContent: 'center', gap: 16, margin: '24px 0' }}>\n//         <button\n//           disabled={current === 0}\n//           onClick={() => setCurrent(c => c - 1)}\n//         >\n//           Previous\n//         </button>\n//         <span>Question {current + 1} of {total}</span>\n//         <button\n//           disabled={current === total - 1}\n//           onClick={() => setCurrent(c => c + 1)}\n//         >\n//           Next\n//         </button>\n//       </div>\n\n//       {/* Dashboard */}\n//       <button\n//         style={{\n//           padding: '10px 16px',\n//           background: '#43cea2',\n//           color: 'white',\n//           border: 'none',\n//           borderRadius: 6,\n//           cursor: 'pointer'\n//         }}\n//         onClick={() => window.location.hash = '#/dashboard'}\n//       >\n//         Return to Dashboard\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default Results;\n\n// import React, { useEffect, useState } from 'react';\n// import { getResult } from './api';\n// import \"./Results.css\";\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n\n//   useEffect(() => {\n//     if (!token) return;\n\n//     getResult(token)\n//       .then(res => {\n//         if (res.data) {\n//           setResult(res.data);\n//         }\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching results:\", err);\n//       });\n//   }, [token]);\n\n//   if (!result) {\n//     return <div className=\"exam-container card\" style={{ textAlign: 'center', padding: '60px 0' }}>Loading result...</div>;\n//   }\n\n//   const review = Array.isArray(result.review) ? result.review : [];\n//   const total = review.length;\n//   const attempted = review.filter(q => q.selected !== undefined && q.selected !== null).length;\n//   const unattempted = total - attempted;\n//   const correct = review.filter(q => q.correct === q.selected).length;\n//   const wrong = attempted - correct;\n//   const percent = total ? Math.round((correct / total) * 100) : 0;\n//   const q = review[current];\n\n//   return (\n//     <div className=\"result-container card\" style={{ maxWidth: '1200px', width: '98vw', margin: '0 auto' }}>\n//       <h2>Exam Submitted</h2>\n\n//       {/* Score and Percentage */}\n//       <div style={{ fontSize: '1.2em', margin: '12px 0', display: 'flex', justifyContent: 'space-between', maxWidth: 500, gap: '20px' }}>\n//         <div><strong>Score:</strong> {correct} / {total}</div>\n//         <div><strong>Percentage:</strong> {percent}%</div>\n//       </div>\n\n//       {/* Stats */}\n//       <div style={{ display: 'flex', gap: '20px', marginBottom: '12px', flexWrap: 'wrap' }}>\n//         <div><strong>Correct:</strong> {correct}</div>\n//         <div><strong>Wrong:</strong> {wrong}</div>\n//         <div><strong>Unattempted:</strong> {unattempted}</div>\n//       </div>\n\n//       <div>Submitted At: {new Date(result.submittedAt).toLocaleString()}</div>\n\n//       {/* Review Section */}\n//       {q && (\n//         <>\n//           <h3 style={{ marginTop: 24 }}>Review Your Answers</h3>\n//           <div className=\"review-card\" style={{ margin: '0 auto', maxWidth: '900px' }}>\n//             <div className=\"review-question\">{current + 1}. {q.question}</div>\n//             <div className=\"review-status\">\n//               <span style={{\n//                 color: q.correct === q.selected ? '#43cea2' :\n//                   (q.selected === undefined || q.selected === null ? '#ff0400' : '#d32f2f'),\n//                 fontWeight: 600\n//               }}>\n//                 {q.correct === q.selected\n//                   ? 'Correct'\n//                   : (q.selected === undefined || q.selected === null\n//                     ? 'Not Answered'\n//                     : 'Wrong')}\n//               </span>\n//             </div>\n\n//             {/* Options */}\n//             <ul className=\"review-options\" style={{ listStyle: 'none', padding: 0 }}>\n//               {q.options.map((opt, i) => (\n//                 <li key={i} style={{\n//                   padding: '8px 12px',\n//                   margin: '6px 0',\n//                   border: '2px solid',\n//                   borderColor:\n//                     q.correct === i\n//                       ? '#43cea2'\n//                       : q.selected === i && q.correct !== i\n//                         ? '#d32f2f'\n//                         : '#ccc',\n//                   borderRadius: 6,\n//                   backgroundColor:\n//                     q.correct === i\n//                       ? '#e6f9f2'\n//                       : q.selected === i && q.correct !== i\n//                         ? '#fdecea'\n//                         : '#fff',\n//                   color:\n//                     q.correct === i\n//                       ? '#2e7d32'\n//                       : q.selected === i && q.correct !== i\n//                         ? '#c62828'\n//                         : '#333',\n//                   fontWeight:\n//                     q.correct === i || q.selected === i ? 600 : 400\n//                 }}>\n//                   <span style={{ fontWeight: 'bold', marginRight: 6 }}>\n//                     {String.fromCharCode(65 + i)}.\n//                   </span>\n//                   {opt}\n//                   {q.correct === i ? ' (Correct)' : ''}\n//                   {q.selected === i && q.correct !== i ? ' (Your answer)' : ''}\n//                 </li>\n//               ))}\n\n//               {/* No answer case */}\n//               {(q.selected === undefined || q.selected === null) && (\n//                 <li style={{\n//                   padding: '8px 12px',\n//                   margin: '6px 0',\n//                   border: '2px dashed #aaa',\n//                   borderRadius: 6,\n//                   backgroundColor: '#fff8e1',\n//                   color: '#8d6e63',\n//                   fontStyle: 'italic'\n//                 }}>\n//                   You did not select an answer for this question.\n//                 </li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Navigation */}\n//           <div style={{ display: 'flex', justifyContent: 'center', gap: 16, margin: '24px 0' }}>\n//             <button disabled={current === 0} onClick={() => setCurrent(c => c - 1)}>Previous</button>\n//             <span>Question {current + 1} of {total}</span>\n//             <button disabled={current === total - 1} onClick={() => setCurrent(c => c + 1)}>Next</button>\n//           </div>\n//         </>\n//       )}\n\n//       {/* Back to Dashboard */}\n//       <button\n//         style={{\n//           padding: '10px 16px',\n//           background: '#43cea2',\n//           color: 'white',\n//           border: 'none',\n//           borderRadius: 6,\n//           cursor: 'pointer'\n//         }}\n//         onClick={() => window.location.hash = '#/dashboard'}\n//       >\n//         Return to Dashboard\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default Results;\n\n// import React, { useEffect, useState } from 'react';\n// import { getResult } from './api';\n// import './Results.css';\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n\n//   useEffect(() => {\n//     getResult(token).then(r => setResult(r.data));\n//   }, [token]);\n\n//   if (!result) return <div>Loading result...</div>;\n\n//   const review = result.review || [];\n//   const total = review.length;\n\n//   return (\n//     <div className=\"result-container\">\n//       <h2>Exam Submitted</h2>\n//       <div>Score: {result.score} / {total}</div>\n//       {review[current] && <div>\n//         <div>{current+1}. {review[current].question}</div>\n//         <div>Correct answer: {review[current].correct}</div>\n//         <div>Your answer: {review[current].selected}</div>\n//       </div>}\n//       <div>\n//         <button disabled={current===0} onClick={()=>setCurrent(c=>c-1)}>Previous</button>\n//         <button disabled={current===total-1} onClick={()=>setCurrent(c=>c+1)}>Next</button>\n//       </div>\n//       <button onClick={()=>window.location.hash='#/dashboard'}>Return to Dashboard</button>\n//     </div>\n//   );\n// }\n\n// export default Results;\nimport React from \"react\";\nimport \"./Results.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Results({\n  score,\n  total,\n  answers,\n  questions,\n  onRestart\n}) {\n  const percentage = (score / total * 100).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"results-title\",\n        children: \"\\uD83D\\uDCCA Exam Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Score: \", score, \" / \", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Percentage: \", percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCDD Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"review-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Your Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Correct Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: questions.map((q, i) => {\n              const isCorrect = answers[i] === q.correctOption;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: isCorrect ? \"correct-row\" : \"wrong-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: q.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: answers[i] || \"Not Answered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: q.correctOption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: isCorrect ? \"✅\" : \"❌\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restart-btn\",\n        onClick: onRestart,\n        children: \"\\uD83D\\uDD04 Take Exam Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Results","score","total","answers","questions","onRestart","percentage","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","i","isCorrect","correctOption","question","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sridh/Desktop/new-exam-builder-ace-main/frontend/src/Results.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { getResult } from './api';\r\n// import \"./Results.css\";\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     getResult(token).then(r => {\r\n//       if (r.data) {\r\n//         setResult(r.data);\r\n//       }\r\n//     }).catch(() => {\r\n//       console.error(\"Error fetching results\");\r\n//     });\r\n//   }, [token]);\r\n\r\n//   if (!result) {\r\n//     return <div className=\"exam-container card\">Loading result...</div>;\r\n//   }\r\n\r\n//   const review = Array.isArray(result.review) ? result.review : [];\r\n//   const total = review.length;\r\n//   const attempted = review.filter(q => q.selected !== undefined && q.selected !== null).length;\r\n//   const unattempted = total - attempted;\r\n//   const correct = review.filter(q => q.correct === q.selected).length;\r\n//   const wrong = attempted - correct;\r\n//   const percent = total ? Math.round((correct / total) * 100) : 0;\r\n//   const q = review[current];\r\n\r\n//   return (\r\n//     <div className=\"result-container card\" style={{ maxWidth: '1200px', width: '98vw', margin: '0 auto' }}>\r\n//       <h2>Exam Submitted</h2>\r\n\r\n//       {/* Score and Percentage */}\r\n//       <div style={{ fontSize: '1.2em', margin: '12px 0', display: 'flex', justifyContent: 'space-between', maxWidth: 500, gap: '20px'}}>\r\n//         <div><strong>Score:</strong> {result.score} / {total}</div>\r\n//         <div><strong>Percentage:</strong> {percent}% / 100%</div>\r\n//       </div>\r\n\r\n//       {/* Stats */}\r\n//       <div style={{ display: 'flex', gap: '20px', marginBottom: '12px', flexWrap: 'wrap' }}>\r\n//         <div><strong>Correct:</strong> {correct}</div>\r\n//         <div><strong>Wrong:</strong> {wrong}</div>\r\n//         <div><strong>Unattempted:</strong> {unattempted}</div>\r\n//       </div>\r\n\r\n//       <div>Submitted At: {new Date(result.submittedAt).toLocaleString()}</div>\r\n\r\n//       <h3 style={{ marginTop: 24 }}>Review Your Answers</h3>\r\n//       {q && (\r\n//         <div className=\"review-card\" style={{ margin: '0 auto', maxWidth: '900px' }}>\r\n//           <div className=\"review-question\">{current + 1}. {q.question}</div>\r\n//           <div className=\"review-status\">\r\n//             <span style={{ \r\n//               color: q.correct === q.selected ? '#43cea2' : \r\n//                      (q.selected === undefined || q.selected === null ? '#ff0400ff' : '#d32f2f'), \r\n//               fontWeight: 600 \r\n//             }}>\r\n//               {q.correct === q.selected \r\n//                 ? 'Correct' \r\n//                 : (q.selected === undefined || q.selected === null \r\n//                     ? 'Not Answered' \r\n//                     : 'Wrong')}\r\n//             </span>\r\n//           </div>\r\n\r\n//           {/* Options */}\r\n//           <ul className=\"review-options\" style={{ listStyle: 'none', padding: 0 }}>\r\n//             {q.options.map((opt, i) => (\r\n//               <li\r\n//                 key={i}\r\n//                 style={{\r\n//                   padding: '8px 12px',\r\n//                   margin: '6px 0',\r\n//                   border: '2px solid',\r\n//                   borderColor:\r\n//                     q.correct === i\r\n//                       ? '#43cea2'\r\n//                       : q.selected === i && q.correct !== i\r\n//                       ? '#d32f2f'\r\n//                       : '#ccc',\r\n//                   borderRadius: 6,\r\n//                   backgroundColor:\r\n//                     q.correct === i\r\n//                       ? '#e6f9f2'\r\n//                       : q.selected === i && q.correct !== i\r\n//                       ? '#fdecea'\r\n//                       : '#fff',\r\n//                   color:\r\n//                     q.correct === i\r\n//                       ? '#2e7d32'\r\n//                       : q.selected === i && q.correct !== i\r\n//                       ? '#c62828'\r\n//                       : '#333',\r\n//                   fontWeight:\r\n//                     q.correct === i || q.selected === i ? 600 : 400\r\n//                 }}\r\n//               >\r\n//                 <span style={{ fontWeight: 'bold', marginRight: 6 }}>\r\n//                   {String.fromCharCode(65 + i)}.\r\n//                 </span>\r\n//                 {opt}\r\n//                 {q.correct === i ? ' (Correct)' : ''}\r\n//                 {q.selected === i && q.correct !== i ? ' (Your answer)' : ''}\r\n//               </li>\r\n//             ))}\r\n\r\n//             {/* No answer case */}\r\n//             {(q.selected === undefined || q.selected === null) && (\r\n//               <li\r\n//                 style={{\r\n//                   padding: '8px 12px',\r\n//                   margin: '6px 0',\r\n//                   border: '2px dashed #aaa',\r\n//                   borderRadius: 6,\r\n//                   backgroundColor: '#fff8e1',\r\n//                   color: '#8d6e63',\r\n//                   fontStyle: 'italic'\r\n//                 }}\r\n//               >\r\n//                 You did not select an answer for this question.\r\n//               </li>\r\n//             )}\r\n//           </ul>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Navigation */}\r\n//       <div style={{ display: 'flex', justifyContent: 'center', gap: 16, margin: '24px 0' }}>\r\n//         <button\r\n//           disabled={current === 0}\r\n//           onClick={() => setCurrent(c => c - 1)}\r\n//         >\r\n//           Previous\r\n//         </button>\r\n//         <span>Question {current + 1} of {total}</span>\r\n//         <button\r\n//           disabled={current === total - 1}\r\n//           onClick={() => setCurrent(c => c + 1)}\r\n//         >\r\n//           Next\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Dashboard */}\r\n//       <button\r\n//         style={{\r\n//           padding: '10px 16px',\r\n//           background: '#43cea2',\r\n//           color: 'white',\r\n//           border: 'none',\r\n//           borderRadius: 6,\r\n//           cursor: 'pointer'\r\n//         }}\r\n//         onClick={() => window.location.hash = '#/dashboard'}\r\n//       >\r\n//         Return to Dashboard\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getResult } from './api';\r\n// import \"./Results.css\";\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n\r\n//     getResult(token)\r\n//       .then(res => {\r\n//         if (res.data) {\r\n//           setResult(res.data);\r\n//         }\r\n//       })\r\n//       .catch(err => {\r\n//         console.error(\"Error fetching results:\", err);\r\n//       });\r\n//   }, [token]);\r\n\r\n//   if (!result) {\r\n//     return <div className=\"exam-container card\" style={{ textAlign: 'center', padding: '60px 0' }}>Loading result...</div>;\r\n//   }\r\n\r\n//   const review = Array.isArray(result.review) ? result.review : [];\r\n//   const total = review.length;\r\n//   const attempted = review.filter(q => q.selected !== undefined && q.selected !== null).length;\r\n//   const unattempted = total - attempted;\r\n//   const correct = review.filter(q => q.correct === q.selected).length;\r\n//   const wrong = attempted - correct;\r\n//   const percent = total ? Math.round((correct / total) * 100) : 0;\r\n//   const q = review[current];\r\n\r\n//   return (\r\n//     <div className=\"result-container card\" style={{ maxWidth: '1200px', width: '98vw', margin: '0 auto' }}>\r\n//       <h2>Exam Submitted</h2>\r\n\r\n//       {/* Score and Percentage */}\r\n//       <div style={{ fontSize: '1.2em', margin: '12px 0', display: 'flex', justifyContent: 'space-between', maxWidth: 500, gap: '20px' }}>\r\n//         <div><strong>Score:</strong> {correct} / {total}</div>\r\n//         <div><strong>Percentage:</strong> {percent}%</div>\r\n//       </div>\r\n\r\n//       {/* Stats */}\r\n//       <div style={{ display: 'flex', gap: '20px', marginBottom: '12px', flexWrap: 'wrap' }}>\r\n//         <div><strong>Correct:</strong> {correct}</div>\r\n//         <div><strong>Wrong:</strong> {wrong}</div>\r\n//         <div><strong>Unattempted:</strong> {unattempted}</div>\r\n//       </div>\r\n\r\n//       <div>Submitted At: {new Date(result.submittedAt).toLocaleString()}</div>\r\n\r\n//       {/* Review Section */}\r\n//       {q && (\r\n//         <>\r\n//           <h3 style={{ marginTop: 24 }}>Review Your Answers</h3>\r\n//           <div className=\"review-card\" style={{ margin: '0 auto', maxWidth: '900px' }}>\r\n//             <div className=\"review-question\">{current + 1}. {q.question}</div>\r\n//             <div className=\"review-status\">\r\n//               <span style={{\r\n//                 color: q.correct === q.selected ? '#43cea2' :\r\n//                   (q.selected === undefined || q.selected === null ? '#ff0400' : '#d32f2f'),\r\n//                 fontWeight: 600\r\n//               }}>\r\n//                 {q.correct === q.selected\r\n//                   ? 'Correct'\r\n//                   : (q.selected === undefined || q.selected === null\r\n//                     ? 'Not Answered'\r\n//                     : 'Wrong')}\r\n//               </span>\r\n//             </div>\r\n\r\n//             {/* Options */}\r\n//             <ul className=\"review-options\" style={{ listStyle: 'none', padding: 0 }}>\r\n//               {q.options.map((opt, i) => (\r\n//                 <li key={i} style={{\r\n//                   padding: '8px 12px',\r\n//                   margin: '6px 0',\r\n//                   border: '2px solid',\r\n//                   borderColor:\r\n//                     q.correct === i\r\n//                       ? '#43cea2'\r\n//                       : q.selected === i && q.correct !== i\r\n//                         ? '#d32f2f'\r\n//                         : '#ccc',\r\n//                   borderRadius: 6,\r\n//                   backgroundColor:\r\n//                     q.correct === i\r\n//                       ? '#e6f9f2'\r\n//                       : q.selected === i && q.correct !== i\r\n//                         ? '#fdecea'\r\n//                         : '#fff',\r\n//                   color:\r\n//                     q.correct === i\r\n//                       ? '#2e7d32'\r\n//                       : q.selected === i && q.correct !== i\r\n//                         ? '#c62828'\r\n//                         : '#333',\r\n//                   fontWeight:\r\n//                     q.correct === i || q.selected === i ? 600 : 400\r\n//                 }}>\r\n//                   <span style={{ fontWeight: 'bold', marginRight: 6 }}>\r\n//                     {String.fromCharCode(65 + i)}.\r\n//                   </span>\r\n//                   {opt}\r\n//                   {q.correct === i ? ' (Correct)' : ''}\r\n//                   {q.selected === i && q.correct !== i ? ' (Your answer)' : ''}\r\n//                 </li>\r\n//               ))}\r\n\r\n//               {/* No answer case */}\r\n//               {(q.selected === undefined || q.selected === null) && (\r\n//                 <li style={{\r\n//                   padding: '8px 12px',\r\n//                   margin: '6px 0',\r\n//                   border: '2px dashed #aaa',\r\n//                   borderRadius: 6,\r\n//                   backgroundColor: '#fff8e1',\r\n//                   color: '#8d6e63',\r\n//                   fontStyle: 'italic'\r\n//                 }}>\r\n//                   You did not select an answer for this question.\r\n//                 </li>\r\n//               )}\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Navigation */}\r\n//           <div style={{ display: 'flex', justifyContent: 'center', gap: 16, margin: '24px 0' }}>\r\n//             <button disabled={current === 0} onClick={() => setCurrent(c => c - 1)}>Previous</button>\r\n//             <span>Question {current + 1} of {total}</span>\r\n//             <button disabled={current === total - 1} onClick={() => setCurrent(c => c + 1)}>Next</button>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n\r\n//       {/* Back to Dashboard */}\r\n//       <button\r\n//         style={{\r\n//           padding: '10px 16px',\r\n//           background: '#43cea2',\r\n//           color: 'white',\r\n//           border: 'none',\r\n//           borderRadius: 6,\r\n//           cursor: 'pointer'\r\n//         }}\r\n//         onClick={() => window.location.hash = '#/dashboard'}\r\n//       >\r\n//         Return to Dashboard\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getResult } from './api';\r\n// import './Results.css';\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     getResult(token).then(r => setResult(r.data));\r\n//   }, [token]);\r\n\r\n//   if (!result) return <div>Loading result...</div>;\r\n\r\n//   const review = result.review || [];\r\n//   const total = review.length;\r\n\r\n//   return (\r\n//     <div className=\"result-container\">\r\n//       <h2>Exam Submitted</h2>\r\n//       <div>Score: {result.score} / {total}</div>\r\n//       {review[current] && <div>\r\n//         <div>{current+1}. {review[current].question}</div>\r\n//         <div>Correct answer: {review[current].correct}</div>\r\n//         <div>Your answer: {review[current].selected}</div>\r\n//       </div>}\r\n//       <div>\r\n//         <button disabled={current===0} onClick={()=>setCurrent(c=>c-1)}>Previous</button>\r\n//         <button disabled={current===total-1} onClick={()=>setCurrent(c=>c+1)}>Next</button>\r\n//       </div>\r\n//       <button onClick={()=>window.location.hash='#/dashboard'}>Return to Dashboard</button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\nimport React from \"react\";\r\nimport \"./Results.css\";\r\n\r\nfunction Results({ score, total, answers, questions, onRestart }) {\r\n  const percentage = ((score / total) * 100).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"results-container\">\r\n      <div className=\"results-card\">\r\n        <h1 className=\"results-title\">📊 Exam Results</h1>\r\n\r\n        <div className=\"score-box\">\r\n          <h2>Score: {score} / {total}</h2>\r\n          <p>Percentage: {percentage}%</p>\r\n        </div>\r\n\r\n        <div className=\"review-section\">\r\n          <h3>📝 Review</h3>\r\n          <table className=\"review-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Question</th>\r\n                <th>Your Answer</th>\r\n                <th>Correct Answer</th>\r\n                <th>Result</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {questions.map((q, i) => {\r\n                const isCorrect = answers[i] === q.correctOption;\r\n                return (\r\n                  <tr key={i} className={isCorrect ? \"correct-row\" : \"wrong-row\"}>\r\n                    <td>{i + 1}</td>\r\n                    <td>{q.question}</td>\r\n                    <td>{answers[i] || \"Not Answered\"}</td>\r\n                    <td>{q.correctOption}</td>\r\n                    <td>{isCorrect ? \"✅\" : \"❌\"}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <button className=\"restart-btn\" onClick={onRestart}>\r\n          🔄 Take Exam Again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}