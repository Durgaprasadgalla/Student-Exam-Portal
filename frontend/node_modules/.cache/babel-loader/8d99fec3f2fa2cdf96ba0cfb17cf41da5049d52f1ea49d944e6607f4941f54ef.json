{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sridh\\\\Desktop\\\\new-exam-builder-ace-main\\\\frontend\\\\src\\\\Results.js\";\n// import React, { useEffect, useState } from 'react';\n// import { getResult } from './api';\n// import './Results.css';\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n\n//   useEffect(() => {\n//     if (!token) return;\n//     getResult(token)\n//       .then(r => setResult(r.data))\n//       .catch(err => console.error(\"Error fetching result:\", err));\n//   }, [token]);\n\n//   if (!result) return <div>Loading result...</div>;\n\n//   const review = result.review || [];\n//   const total = review.length;\n\n//   return (\n//     <div className=\"result-container\">\n//       <h2>üéØ Exam Results</h2>\n//       <div>Your Score: {result.score} / {total}</div>\n\n//       {review[current] && (\n//   <div className=\"bg-white p-6 rounded-lg shadow border border-gray-200 mb-6\">\n//     {/* Question box */}\n//     <div className=\"border border-gray-300 rounded-md p-4 mb-4 bg-gray-50\">\n//       <h3 className=\"text-lg font-semibold\">\n//         {current + 1}. {review[current].question}\n//       </h3>\n//     </div>\n\n//     {/* Answer box */}\n//     <div className=\"space-y-3\">\n//       <p className=\"border border-green-300 rounded-md p-3 bg-green-50\">\n//         ‚úÖ Correct Answer:{\" \"}\n//         <span className=\"font-semibold text-green-700\">{review[current].correct}</span>\n//       </p>\n//       <p\n//         className={`border rounded-md p-3 ${\n//           review[current].selected === review[current].correct\n//             ? \"border-green-300 bg-green-50 text-green-700\"\n//             : \"border-red-300 bg-red-50 text-red-700\"\n//         }`}\n//       >\n//         üìù Your Answer:{\" \"}\n//         <span className=\"font-semibold\">\n//           {review[current].selected || \"No Answer\"}\n//         </span>\n//       </p>\n//     </div>\n//   </div>\n// )}\n\n//       <div className=\"nav-buttons\">\n//         <button disabled={current === 0} onClick={() => setCurrent(c => c - 1)}>Previous</button>\n//         <button disabled={current === total - 1} onClick={() => setCurrent(c => c + 1)}>Next</button>\n//       </div>\n\n//       <button\n//   onClick={() => {\n//     localStorage.removeItem(\"viewing_results\"); // ‚úÖ Clear flag\n//     window.location.href = \"/#/dashboard\";\n//   }}\n// >\n//   Return to Dashboard\n// </button>\n\n//     </div>\n//   );\n// }\n\n// export default Results;\n\n// import React, { useEffect, useState } from 'react';\n// import { getResult } from './api';\n// import './Exam.css';\n\n// function Results({ token }) {\n//   const [result, setResult] = useState(null);\n//   const [current, setCurrent] = useState(0);\n//   const [questions, setQuestions] = useState([]);\n\n//   useEffect(() => {\n//     // Load saved questions so we know the options\n//     const savedQuestions = JSON.parse(localStorage.getItem(\"exam_questions\")) || [];\n//     setQuestions(savedQuestions);\n\n//     if (!token) return;\n//     getResult(token)\n//       .then(r => setResult(r.data))\n//       .catch(err => console.error(\"Error fetching result:\", err));\n//   }, [token]);\n\n//   if (!result) return <div className=\"exam-container\">Loading result...</div>;\n\n//   const review = result.review || [];\n//   const total = review.length;\n//   const qReview = review[current] || {};\n//   const qOriginal = questions.find(q => q._id === qReview.questionId) || {};\n\n//   const options = qOriginal.options || [];\n//   const correctIdx = options.findIndex(opt => opt === qReview.correct);\n//   const selectedIdx = options.findIndex(opt => opt === qReview.selected);\n\n//   return (\n//     <div className=\"exam-container\">\n//       <h2 style={{ textAlign: 'center' }}>üéØ Exam Results</h2>\n//       <div style={{ textAlign: 'center', marginBottom: '20px' }}>\n//         Your Score: {result.score} / {total}\n//       </div>\n\n//       <h3>\n//         Question {current + 1} of {total}\n//       </h3>\n//       <div>{qReview.question}</div>\n\n//       <ul style={{ listStyle: \"none\", padding: 0 }}>\n//         {options.map((opt, idx) => {\n//           let border = \"2px solid #ccc\";\n//           let bg = \"#fff\";\n\n//           if (idx === correctIdx) {\n//             border = \"2px solid #16a34a\"; // green\n//             bg = \"#dcfce7\";\n//           }\n//           if (selectedIdx === idx && selectedIdx !== correctIdx) {\n//             border = \"2px solid #dc2626\"; // red\n//             bg = \"#fee2e2\";\n//           }\n\n//           return (\n//             <li\n//               key={idx}\n//               style={{\n//                 padding: \"8px\",\n//                 margin: \"6px 0\",\n//                 border,\n//                 borderRadius: 6,\n//                 backgroundColor: bg\n//               }}\n//             >\n//               {String.fromCharCode(65 + idx)}. {opt}\n//             </li>\n//           );\n//         })}\n//       </ul>\n\n//       <div className=\"exam-actions buttons\">\n//         <button disabled={current === 0} onClick={() => setCurrent(current - 1)}>Previous</button>\n//         <button disabled={current === total - 1} onClick={() => setCurrent(current + 1)}>Next</button>\n//         <button\n//           onClick={() => {\n//             localStorage.removeItem(\"viewing_results\");\n//             window.location.href = \"/#/dashboard\";\n//           }}\n//         >\n//           Return to Dashboard\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Results;\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamResults = ({\n  questions,\n  userAnswers\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFAF Exam Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Score: \", calculateScore(questions, userAnswers), \" / \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), questions.map((q, qIndex) => {\n      const userAnswer = userAnswers[qIndex];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Question \", qIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: q.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"10px\"\n          },\n          children: q.options.map((option, oIndex) => {\n            let borderColor = \"#ccc\"; // default border\n\n            if (option === q.correctAnswer) {\n              borderColor = \"green\"; // correct option\n            }\n            if (option === userAnswer && userAnswer !== q.correctAnswer) {\n              borderColor = \"red\"; // wrong selected option\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: \"10px\",\n                border: `2px solid ${borderColor}`,\n                borderRadius: \"5px\"\n              },\n              children: option\n            }, oIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_c = ExamResults;\nconst calculateScore = (questions, userAnswers) => {\n  let score = 0;\n  questions.forEach((q, i) => {\n    if (userAnswers[i] === q.correctAnswer) score++;\n  });\n  return score;\n};\nexport default ExamResults;\nvar _c;\n$RefreshReg$(_c, \"ExamResults\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExamResults","questions","userAnswers","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateScore","length","map","q","qIndex","userAnswer","marginBottom","question","display","flexDirection","gap","options","option","oIndex","borderColor","correctAnswer","border","borderRadius","_c","score","forEach","i","$RefreshReg$"],"sources":["C:/Users/Sridh/Desktop/new-exam-builder-ace-main/frontend/src/Results.js"],"sourcesContent":["\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getResult } from './api';\r\n// import './Results.css';\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     if (!token) return;\r\n//     getResult(token)\r\n//       .then(r => setResult(r.data))\r\n//       .catch(err => console.error(\"Error fetching result:\", err));\r\n//   }, [token]);\r\n\r\n//   if (!result) return <div>Loading result...</div>;\r\n\r\n//   const review = result.review || [];\r\n//   const total = review.length;\r\n\r\n//   return (\r\n//     <div className=\"result-container\">\r\n//       <h2>üéØ Exam Results</h2>\r\n//       <div>Your Score: {result.score} / {total}</div>\r\n\r\n//       {review[current] && (\r\n//   <div className=\"bg-white p-6 rounded-lg shadow border border-gray-200 mb-6\">\r\n//     {/* Question box */}\r\n//     <div className=\"border border-gray-300 rounded-md p-4 mb-4 bg-gray-50\">\r\n//       <h3 className=\"text-lg font-semibold\">\r\n//         {current + 1}. {review[current].question}\r\n//       </h3>\r\n//     </div>\r\n\r\n//     {/* Answer box */}\r\n//     <div className=\"space-y-3\">\r\n//       <p className=\"border border-green-300 rounded-md p-3 bg-green-50\">\r\n//         ‚úÖ Correct Answer:{\" \"}\r\n//         <span className=\"font-semibold text-green-700\">{review[current].correct}</span>\r\n//       </p>\r\n//       <p\r\n//         className={`border rounded-md p-3 ${\r\n//           review[current].selected === review[current].correct\r\n//             ? \"border-green-300 bg-green-50 text-green-700\"\r\n//             : \"border-red-300 bg-red-50 text-red-700\"\r\n//         }`}\r\n//       >\r\n//         üìù Your Answer:{\" \"}\r\n//         <span className=\"font-semibold\">\r\n//           {review[current].selected || \"No Answer\"}\r\n//         </span>\r\n//       </p>\r\n//     </div>\r\n//   </div>\r\n// )}\r\n\r\n\r\n//       <div className=\"nav-buttons\">\r\n//         <button disabled={current === 0} onClick={() => setCurrent(c => c - 1)}>Previous</button>\r\n//         <button disabled={current === total - 1} onClick={() => setCurrent(c => c + 1)}>Next</button>\r\n//       </div>\r\n\r\n//       <button\r\n//   onClick={() => {\r\n//     localStorage.removeItem(\"viewing_results\"); // ‚úÖ Clear flag\r\n//     window.location.href = \"/#/dashboard\";\r\n//   }}\r\n// >\r\n//   Return to Dashboard\r\n// </button>\r\n\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getResult } from './api';\r\n// import './Exam.css';\r\n\r\n// function Results({ token }) {\r\n//   const [result, setResult] = useState(null);\r\n//   const [current, setCurrent] = useState(0);\r\n//   const [questions, setQuestions] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Load saved questions so we know the options\r\n//     const savedQuestions = JSON.parse(localStorage.getItem(\"exam_questions\")) || [];\r\n//     setQuestions(savedQuestions);\r\n\r\n//     if (!token) return;\r\n//     getResult(token)\r\n//       .then(r => setResult(r.data))\r\n//       .catch(err => console.error(\"Error fetching result:\", err));\r\n//   }, [token]);\r\n\r\n//   if (!result) return <div className=\"exam-container\">Loading result...</div>;\r\n\r\n//   const review = result.review || [];\r\n//   const total = review.length;\r\n//   const qReview = review[current] || {};\r\n//   const qOriginal = questions.find(q => q._id === qReview.questionId) || {};\r\n\r\n//   const options = qOriginal.options || [];\r\n//   const correctIdx = options.findIndex(opt => opt === qReview.correct);\r\n//   const selectedIdx = options.findIndex(opt => opt === qReview.selected);\r\n\r\n//   return (\r\n//     <div className=\"exam-container\">\r\n//       <h2 style={{ textAlign: 'center' }}>üéØ Exam Results</h2>\r\n//       <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n//         Your Score: {result.score} / {total}\r\n//       </div>\r\n\r\n//       <h3>\r\n//         Question {current + 1} of {total}\r\n//       </h3>\r\n//       <div>{qReview.question}</div>\r\n\r\n//       <ul style={{ listStyle: \"none\", padding: 0 }}>\r\n//         {options.map((opt, idx) => {\r\n//           let border = \"2px solid #ccc\";\r\n//           let bg = \"#fff\";\r\n\r\n//           if (idx === correctIdx) {\r\n//             border = \"2px solid #16a34a\"; // green\r\n//             bg = \"#dcfce7\";\r\n//           }\r\n//           if (selectedIdx === idx && selectedIdx !== correctIdx) {\r\n//             border = \"2px solid #dc2626\"; // red\r\n//             bg = \"#fee2e2\";\r\n//           }\r\n\r\n//           return (\r\n//             <li\r\n//               key={idx}\r\n//               style={{\r\n//                 padding: \"8px\",\r\n//                 margin: \"6px 0\",\r\n//                 border,\r\n//                 borderRadius: 6,\r\n//                 backgroundColor: bg\r\n//               }}\r\n//             >\r\n//               {String.fromCharCode(65 + idx)}. {opt}\r\n//             </li>\r\n//           );\r\n//         })}\r\n//       </ul>\r\n\r\n//       <div className=\"exam-actions buttons\">\r\n//         <button disabled={current === 0} onClick={() => setCurrent(current - 1)}>Previous</button>\r\n//         <button disabled={current === total - 1} onClick={() => setCurrent(current + 1)}>Next</button>\r\n//         <button\r\n//           onClick={() => {\r\n//             localStorage.removeItem(\"viewing_results\");\r\n//             window.location.href = \"/#/dashboard\";\r\n//           }}\r\n//         >\r\n//           Return to Dashboard\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Results;\r\n\r\n\r\nimport React from \"react\";\r\n\r\nconst ExamResults = ({ questions, userAnswers }) => {\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>üéØ Exam Results</h2>\r\n      <p>Your Score: {calculateScore(questions, userAnswers)} / {questions.length}</p>\r\n\r\n      {questions.map((q, qIndex) => {\r\n        const userAnswer = userAnswers[qIndex];\r\n        return (\r\n          <div key={qIndex} style={{ marginBottom: \"20px\" }}>\r\n            <h4>Question {qIndex + 1} of {questions.length}</h4>\r\n            <p>{q.question}</p>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\r\n              {q.options.map((option, oIndex) => {\r\n                let borderColor = \"#ccc\"; // default border\r\n\r\n                if (option === q.correctAnswer) {\r\n                  borderColor = \"green\"; // correct option\r\n                }\r\n                if (option === userAnswer && userAnswer !== q.correctAnswer) {\r\n                  borderColor = \"red\"; // wrong selected option\r\n                }\r\n\r\n                return (\r\n                  <div\r\n                    key={oIndex}\r\n                    style={{\r\n                      padding: \"10px\",\r\n                      border: `2px solid ${borderColor}`,\r\n                      borderRadius: \"5px\"\r\n                    }}\r\n                  >\r\n                    {option}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst calculateScore = (questions, userAnswers) => {\r\n  let score = 0;\r\n  questions.forEach((q, i) => {\r\n    if (userAnswers[i] === q.correctAnswer) score++;\r\n  });\r\n  return score;\r\n};\r\n\r\nexport default ExamResults;\r\n"],"mappings":";AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAClD,oBACEH,OAAA;IAAKI,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BN,OAAA;MAAAM,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBV,OAAA;MAAAM,QAAA,GAAG,cAAY,EAACK,cAAc,CAACT,SAAS,EAAEC,WAAW,CAAC,EAAC,KAAG,EAACD,SAAS,CAACU,MAAM;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/ER,SAAS,CAACW,GAAG,CAAC,CAACC,CAAC,EAAEC,MAAM,KAAK;MAC5B,MAAMC,UAAU,GAAGb,WAAW,CAACY,MAAM,CAAC;MACtC,oBACEf,OAAA;QAAkBI,KAAK,EAAE;UAAEa,YAAY,EAAE;QAAO,CAAE;QAAAX,QAAA,gBAChDN,OAAA;UAAAM,QAAA,GAAI,WAAS,EAACS,MAAM,GAAG,CAAC,EAAC,MAAI,EAACb,SAAS,CAACU,MAAM;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpDV,OAAA;UAAAM,QAAA,EAAIQ,CAAC,CAACI;QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBV,OAAA;UAAKI,KAAK,EAAE;YAAEe,OAAO,EAAE,MAAM;YAAEC,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAO,CAAE;UAAAf,QAAA,EACnEQ,CAAC,CAACQ,OAAO,CAACT,GAAG,CAAC,CAACU,MAAM,EAAEC,MAAM,KAAK;YACjC,IAAIC,WAAW,GAAG,MAAM,CAAC,CAAC;;YAE1B,IAAIF,MAAM,KAAKT,CAAC,CAACY,aAAa,EAAE;cAC9BD,WAAW,GAAG,OAAO,CAAC,CAAC;YACzB;YACA,IAAIF,MAAM,KAAKP,UAAU,IAAIA,UAAU,KAAKF,CAAC,CAACY,aAAa,EAAE;cAC3DD,WAAW,GAAG,KAAK,CAAC,CAAC;YACvB;YAEA,oBACEzB,OAAA;cAEEI,KAAK,EAAE;gBACLC,OAAO,EAAE,MAAM;gBACfsB,MAAM,EAAE,aAAaF,WAAW,EAAE;gBAClCG,YAAY,EAAE;cAChB,CAAE;cAAAtB,QAAA,EAEDiB;YAAM,GAPFC,MAAM;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQR,CAAC;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GA3BEK,MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4BX,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACmB,EAAA,GA1CI5B,WAAW;AA4CjB,MAAMU,cAAc,GAAGA,CAACT,SAAS,EAAEC,WAAW,KAAK;EACjD,IAAI2B,KAAK,GAAG,CAAC;EACb5B,SAAS,CAAC6B,OAAO,CAAC,CAACjB,CAAC,EAAEkB,CAAC,KAAK;IAC1B,IAAI7B,WAAW,CAAC6B,CAAC,CAAC,KAAKlB,CAAC,CAACY,aAAa,EAAEI,KAAK,EAAE;EACjD,CAAC,CAAC;EACF,OAAOA,KAAK;AACd,CAAC;AAED,eAAe7B,WAAW;AAAC,IAAA4B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}