{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { login, register } from \"./api\";\n// import \"./Auth.css\";\n\n// function Auth({ onAuth }) {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [error, setError] = useState(\"\");\n\n//   const validatePassword = (pwd) => {\n//     const errors = [];\n//     if (pwd.length < 8) errors.push(\"At least 8 characters\");\n//     if (!/[A-Z]/.test(pwd)) errors.push(\"At least one uppercase letter\");\n//     if (!/[a-z]/.test(pwd)) errors.push(\"At least one lowercase letter\");\n//     if (!/[0-9]/.test(pwd)) errors.push(\"At least one number\");\n//     if (!/[!@#$%^&*(),.?\\\":{}|<>]/.test(pwd)) errors.push(\"At least one special character\");\n//     return errors;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n\n//     if (!isLogin) {\n//       const pwdErrors = validatePassword(password);\n//       if (pwdErrors.length > 0) {\n//         setError(\"Password must meet requirements: \" + pwdErrors.join(\", \"));\n//         return;\n//       }\n//     }\n\n//     try {\n//       if (isLogin) {\n//         const res = await login(username, password);\n//         const { token, userId } = res.data;\n//         onAuth(token, userId, username);\n//       } else {\n//         await register(username, password);\n//         setError(\"Registration successful! Please login.\");\n//         setIsLogin(true);\n//         setUsername(\"\");\n//         setPassword(\"\");\n//       }\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Error\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container card\">\n//       <h2>{isLogin ? \"Login\" : \"Register\"}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} required />\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\n//         <button type=\"submit\">{isLogin ? \"Login\" : \"Register\"}</button>\n//       </form>\n//       <button onClick={() => { setIsLogin(!isLogin); setError(\"\"); }}>\n//         {isLogin ? \"Need an account? Register\" : \"Have an account? Login\"}\n//       </button>\n//       {error && <div style={{color: \"red\"}}>{error}</div>}\n//     </div>\n//   );\n// }\n\n// export default Auth;\n// import React, { useState } from 'react';\n// import './Auth.css';\n// import { register, login } from './api';\n\n// function Auth({ onAuth }) {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     try {\n//       if (isLogin) {\n//         const res = await login(username, password);\n//         const { token, userId } = res.data;\n//         onAuth(token, userId);\n//       } else {\n//         await register(username, password);\n//         setError('Registration successful! Please login.');\n//         setIsLogin(true);\n//         setUsername('');\n//         setPassword('');\n//       }\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Error');\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container card\">\n//       <h2>{isLogin ? 'Login' : 'Register'}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} required />\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\n//         <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\n//       </form>\n//       <button onClick={() => { setIsLogin(!isLogin); setError(''); }}>\n//         {isLogin ? 'Need an account? Register' : 'Have an account? Login'}\n//       </button>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//     </div>\n//   );\n// }\n\n// export default Auth;\n// import React, { useState } from \"react\";\n// import { login, register } from \"./api\";\n\n// function Auth({ onAuth }) {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [isRegister, setIsRegister] = useState(false);\n//   const [error, setError] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = isRegister\n//         ? await register(username, password)\n//         : await login(username, password);\n//       const token = res.data.token;\n//       const userId = res.data.userId;\n//       onAuth(token, userId);\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Authentication failed\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ maxWidth: 400, margin: \"50px auto\", textAlign: \"center\" }}>\n//       <h2>{isRegister ? \"Register\" : \"Login\"}</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           required\n//           style={{ width: \"100%\", padding: 8, margin: \"8px 0\" }}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//           style={{ width: \"100%\", padding: 8, margin: \"8px 0\" }}\n//         />\n//         <button type=\"submit\" style={{ width: \"100%\", padding: 10, margin: \"8px 0\" }}>\n//           {isRegister ? \"Register\" : \"Login\"}\n//         </button>\n//       </form>\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       <p>\n//         {isRegister ? \"Have an account?\" : \"No account?\"}{\" \"}\n//         <span\n//           style={{ color: \"blue\", cursor: \"pointer\" }}\n//           onClick={() => setIsRegister(!isRegister)}\n//         >\n//           {isRegister ? \"Login\" : \"Register\"}\n//         </span>\n//       </p>\n//     </div>\n//   );\n// }\n\n// export default Auth;","map":{"version":3,"names":[],"sources":["C:/Users/Sridh/Desktop/new-exam-builder-ace-main/frontend/src/Auth.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { login, register } from \"./api\";\r\n// import \"./Auth.css\";\r\n\r\n// function Auth({ onAuth }) {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [isLogin, setIsLogin] = useState(true);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const validatePassword = (pwd) => {\r\n//     const errors = [];\r\n//     if (pwd.length < 8) errors.push(\"At least 8 characters\");\r\n//     if (!/[A-Z]/.test(pwd)) errors.push(\"At least one uppercase letter\");\r\n//     if (!/[a-z]/.test(pwd)) errors.push(\"At least one lowercase letter\");\r\n//     if (!/[0-9]/.test(pwd)) errors.push(\"At least one number\");\r\n//     if (!/[!@#$%^&*(),.?\\\":{}|<>]/.test(pwd)) errors.push(\"At least one special character\");\r\n//     return errors;\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n\r\n//     if (!isLogin) {\r\n//       const pwdErrors = validatePassword(password);\r\n//       if (pwdErrors.length > 0) {\r\n//         setError(\"Password must meet requirements: \" + pwdErrors.join(\", \"));\r\n//         return;\r\n//       }\r\n//     }\r\n\r\n//     try {\r\n//       if (isLogin) {\r\n//         const res = await login(username, password);\r\n//         const { token, userId } = res.data;\r\n//         onAuth(token, userId, username);\r\n//       } else {\r\n//         await register(username, password);\r\n//         setError(\"Registration successful! Please login.\");\r\n//         setIsLogin(true);\r\n//         setUsername(\"\");\r\n//         setPassword(\"\");\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || \"Error\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container card\">\r\n//       <h2>{isLogin ? \"Login\" : \"Register\"}</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} required />\r\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n//         <button type=\"submit\">{isLogin ? \"Login\" : \"Register\"}</button>\r\n//       </form>\r\n//       <button onClick={() => { setIsLogin(!isLogin); setError(\"\"); }}>\r\n//         {isLogin ? \"Need an account? Register\" : \"Have an account? Login\"}\r\n//       </button>\r\n//       {error && <div style={{color: \"red\"}}>{error}</div>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Auth;\r\n// import React, { useState } from 'react';\r\n// import './Auth.css';\r\n// import { register, login } from './api';\r\n\r\n// function Auth({ onAuth }) {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [isLogin, setIsLogin] = useState(true);\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError('');\r\n//     try {\r\n//       if (isLogin) {\r\n//         const res = await login(username, password);\r\n//         const { token, userId } = res.data;\r\n//         onAuth(token, userId);\r\n//       } else {\r\n//         await register(username, password);\r\n//         setError('Registration successful! Please login.');\r\n//         setIsLogin(true);\r\n//         setUsername('');\r\n//         setPassword('');\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Error');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container card\">\r\n//       <h2>{isLogin ? 'Login' : 'Register'}</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} required />\r\n//         <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n//         <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n//       </form>\r\n//       <button onClick={() => { setIsLogin(!isLogin); setError(''); }}>\r\n//         {isLogin ? 'Need an account? Register' : 'Have an account? Login'}\r\n//       </button>\r\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Auth;\r\n// import React, { useState } from \"react\";\r\n// import { login, register } from \"./api\";\r\n\r\n// function Auth({ onAuth }) {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [isRegister, setIsRegister] = useState(false);\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const res = isRegister\r\n//         ? await register(username, password)\r\n//         : await login(username, password);\r\n//       const token = res.data.token;\r\n//       const userId = res.data.userId;\r\n//       onAuth(token, userId);\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || \"Authentication failed\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ maxWidth: 400, margin: \"50px auto\", textAlign: \"center\" }}>\r\n//       <h2>{isRegister ? \"Register\" : \"Login\"}</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Username\"\r\n//           value={username}\r\n//           onChange={(e) => setUsername(e.target.value)}\r\n//           required\r\n//           style={{ width: \"100%\", padding: 8, margin: \"8px 0\" }}\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//           style={{ width: \"100%\", padding: 8, margin: \"8px 0\" }}\r\n//         />\r\n//         <button type=\"submit\" style={{ width: \"100%\", padding: 10, margin: \"8px 0\" }}>\r\n//           {isRegister ? \"Register\" : \"Login\"}\r\n//         </button>\r\n//       </form>\r\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n//       <p>\r\n//         {isRegister ? \"Have an account?\" : \"No account?\"}{\" \"}\r\n//         <span\r\n//           style={{ color: \"blue\", cursor: \"pointer\" }}\r\n//           onClick={() => setIsRegister(!isRegister)}\r\n//         >\r\n//           {isRegister ? \"Login\" : \"Register\"}\r\n//         </span>\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Auth;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}